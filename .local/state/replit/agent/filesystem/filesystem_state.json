{"file_contents":{"GITHUB_DEPLOYMENT_GUIDE.md":{"content":"# GitHub Deployment Guide for Polban Landing Page\n\nThis guide will help you deploy the Polban landing page to GitHub and host it using GitHub Pages.\n\n## Prerequisites\n\n1. A GitHub account (create one at https://github.com/join if you don't have one)\n2. Git installed on your computer (comes with GitHub Desktop or can be installed separately)\n\n## Deployment Steps\n\n### Option 1: Using the Automated Deployment Script (Recommended)\n\n1. Double-click on `deploy.bat` in the project folder, or run it from PowerShell:\n   ```powershell\n   .\\deploy.bat\n   ```\n\n2. Follow the prompts in the PowerShell window:\n   - Enter your GitHub username\n   - Enter the repository name you want to create (e.g., \"polban-landing-page\")\n\n3. The script will automatically:\n   - Set up the remote repository connection\n   - Push all files to GitHub\n   - Configure the main branch\n\n### Option 2: Manual Deployment\n\n1. Create a new repository on GitHub:\n   - Go to https://github.com/new\n   - Enter a repository name (e.g., \"polban-landing-page\")\n   - Choose Public or Private (your choice)\n   - **Important**: Leave all initialization options unchecked (no README, no .gitignore, no license)\n   - Click \"Create repository\"\n\n2. Copy the repository URL (it will look like: `https://github.com/yourusername/your-repo-name.git`)\n\n3. Open PowerShell or Command Prompt and navigate to the project folder:\n   ```powershell\n   cd d:\\flutterflow\\polban-rnezgj\\landing\n   ```\n\n4. Add the remote origin:\n   ```powershell\n   git remote add origin YOUR_COPIED_REPOSITORY_URL\n   ```\n\n5. Rename the branch to main (if needed):\n   ```powershell\n   git branch -M main\n   ```\n\n6. Push the code to GitHub:\n   ```powershell\n   git push -u origin main\n   ```\n\n## Setting up GitHub Pages\n\nAfter pushing your code to GitHub:\n\n1. Go to your repository on GitHub\n2. Click on the \"Settings\" tab\n3. Scroll down to the \"Pages\" section\n4. Under \"Source\", select \"main\" branch from the dropdown\n5. Click \"Save\"\n6. Wait a minute or two for GitHub to build your site\n7. You'll see a message with your site URL (it will look like: `https://yourusername.github.io/your-repo-name/`)\n\n## Updating Your Site\n\nIf you make changes to your site in the future:\n\n1. Commit your changes:\n   ```powershell\n   git add .\n   git commit -m \"Describe your changes here\"\n   ```\n\n2. Push to GitHub:\n   ```powershell\n   git push\n   ```\n\nYour GitHub Pages site will automatically update with your changes.\n\n## Troubleshooting\n\nIf you encounter any issues:\n\n1. Make sure you have internet connection\n2. Verify your GitHub credentials if prompted\n3. Check that you've correctly created an empty repository (without initialization files)\n4. Ensure Git is properly installed on your system\n\nIf you continue to have problems, feel free to ask for help!","size_bytes":2769},"LOCALIZATION_GUIDE.md":{"content":"# راهنمای لوکالیزیشن پولبان\n\n## بررسی کلی\n\nسیستم لوکالیزیشن پولبان یک راه‌حل کامل برای ترجمه وبسایت از انگلیسی به فارسی با پشتیبانی کامل از RTL (راست به چپ) است.\n\n## ویژگی‌های کلیدی\n\n- ✅ پشتیبانی کامل از RTL برای فارسی و عربی\n- ✅ تغییر زبان بدون بارگذاری مجدد صفحه\n- ✅ ترجمه کامل تمام محتوای متنی\n- ✅ فونت‌های فارسی مناسب (Vazirmatn, IRANSansX)\n- ✅ انیمیشن‌های مخصوص RTL\n- ✅ اعتبارسنجی فرم‌ها با پیام‌های ترجمه شده\n- ✅ ذخیره انتخاب زبان کاربر\n\n## ساختار فایل‌ها\n\n```\nsrc/\n├── locales/\n│   ├── en.json          # ترجمه‌های انگلیسی\n│   └── fa.json          # ترجمه‌های فارسی\n├── js/\n│   ├── localization.js  # سیستم لوکالیزیشن\n│   └── script.js        # کدهای اصلی (به‌روزرسانی شده)\n└── css/\n    ├── styles.css       # استایل‌های اصلی\n    └── rtl.css          # استایل‌های RTL\n```\n\n## نحوه استفاده\n\n### 1. تغییر زبان\n\nکاربران می‌توانند با کلیک روی دکمه تغییر زبان در هدر، بین انگلیسی و فارسی جابجا شوند.\n\n### 2. اضافه کردن زبان جدید\n\nبرای اضافه کردن زبان جدید (مثل عربی):\n\n1. فایل JSON جدید در `src/locales/` ایجاد کنید\n2. کلیدهای ترجمه را اضافه کنید\n3. در `localization.js` زبان جدید را به `rtlLanguages` اضافه کنید\n4. استایل‌های RTL را در صورت نیاز به‌روزرسانی کنید\n\n### 3. اضافه کردن متن جدید\n\nبرای اضافه کردن متن جدید:\n\n1. کلید جدید را در فایل‌های JSON اضافه کنید\n2. در `localization.js` تابع `updateElements()` را به‌روزرسانی کنید\n3. HTML را با `data-translate` attribute علامت‌گذاری کنید\n\n## مثال‌ها\n\n### اضافه کردن کلید ترجمه جدید\n\n```json\n// src/locales/en.json\n{\n  \"new_section\": {\n    \"title\": \"New Section\",\n    \"description\": \"This is a new section\"\n  }\n}\n\n// src/locales/fa.json\n{\n  \"new_section\": {\n    \"title\": \"بخش جدید\",\n    \"description\": \"این یک بخش جدید است\"\n  }\n}\n```\n\n### استفاده در HTML\n\n```html\n<h2 data-translate=\"new_section.title\">New Section</h2>\n<p data-translate=\"new_section.description\">This is a new section</p>\n```\n\n### استفاده در JavaScript\n\n```javascript\n// دریافت ترجمه\nconst translation = window.localizationManager.getTranslation('new_section.title');\n\n// گوش دادن به تغییر زبان\ndocument.addEventListener('languageChanged', function(event) {\n    const { language, isRTL } = event.detail;\n    // کدهای مربوط به تغییر زبان\n});\n```\n\n## تست سیستم\n\nبرای تست سیستم لوکالیزیشن:\n\n1. فایل `test_localization.html` را در مرورگر باز کنید\n2. دکمه تغییر زبان را کلیک کنید\n3. بررسی کنید که:\n   - متن‌ها ترجمه می‌شوند\n   - چیدمان به RTL تغییر می‌کند\n   - انیمیشن‌ها درست کار می‌کنند\n   - فرم‌ها پیام‌های ترجمه شده نشان می‌دهند\n\n## نکات مهم\n\n### RTL Layout\n- تمام عناصر به طور خودکار برای RTL تنظیم می‌شوند\n- انیمیشن‌ها برای RTL بهینه‌سازی شده‌اند\n- فونت‌های فارسی به طور خودکار اعمال می‌شوند\n\n### Performance\n- ترجمه‌ها فقط یک بار بارگذاری می‌شوند\n- تغییر زبان بدون بارگذاری مجدد صفحه\n- انیمیشن‌ها بهینه‌سازی شده‌اند\n\n### Accessibility\n- پشتیبانی کامل از screen reader\n- Navigation keyboard-friendly\n- ARIA labels ترجمه شده\n\n## عیب‌یابی\n\n### مشکل: ترجمه‌ها نمایش داده نمی‌شوند\n- بررسی کنید که فایل‌های JSON در مسیر درست قرار دارند\n- Console مرورگر را برای خطاها بررسی کنید\n\n### مشکل: RTL درست کار نمی‌کند\n- بررسی کنید که `rtl.css` بارگذاری شده است\n- `dir=\"rtl\"` روی `<html>` تنظیم شده باشد\n\n### مشکل: انیمیشن‌ها در RTL درست نیستند\n- بررسی کنید که کلاس `rtl-animations` اضافه شده است\n- CSS animations برای RTL تعریف شده‌اند\n\n## پشتیبانی\n\nبرای سوالات یا مشکلات:\n- فایل‌های کد را بررسی کنید\n- Console مرورگر را چک کنید\n- تست‌های موجود را اجرا کنید\n","size_bytes":5069},"README.md":{"content":"# Polban Landing Page\n\nThis is the landing page for Polban, a multilingual financial management application with RTL support.\n\n## Folder Structure\n\n```\n.\n├── assets/\n│   └── images/          # All image assets\n├── pages/               # All secondary HTML pages\n│   ├── blog.html\n│   ├── contact.html\n│   ├── post1.html\n│   ├── privacy.html\n│   └── terms.html\n├── src/\n│   ├── css/             # Stylesheets\n│   │   └── styles.css\n│   └── js/              # JavaScript files\n│       └── script.js\n├── index.html           # Main landing page\n├── package.json         # Project dependencies\n└── README.md            # This file\n```\n\n## Project Overview\n\nPolban is a powerful financial management application with full RTL support for Persian, Arabic, English, and Turkish. This landing page provides an introduction to the app's features and functionality.\n\n## Key Features\n\n- Responsive design that works on mobile and desktop\n- Light/dark theme toggle with system preference detection\n- Multilingual support with RTL layout for Persian and Arabic\n- Typing animation in the hero section\n- Gallery with app screenshots\n- Contact form\n- Blog section\n\n## Development\n\nTo run the project locally, simply open `index.html` in a web browser.\n\nFor image optimization, run:\n```bash\nnpm run convert\n```\n\n## Technologies Used\n\n- HTML5\n- CSS3\n- JavaScript (Vanilla)\n- Font Awesome for icons\n- Google Fonts (Vazirmatn, IRANSansX)\n\n## Deployment\n\nThis is a static site that can be deployed to any web hosting service that supports static files.\n\n### GitHub Deployment\n\nTo deploy to GitHub Pages:\n\n1. Run the deployment script:\n   ```powershell\n   .\\deploy_to_github.ps1\n   ```\n2. Follow the prompts to enter your GitHub username and desired repository name.\n3. The script will automatically initialize the repository (if needed), set up the remote, and push the code.\n\nAlternatively, you can manually deploy by:\n\n1. Creating a new repository on GitHub\n2. Adding the remote origin:\n   ```bash\n   git remote add origin https://github.com/yourusername/your-repo-name.git\n   ```\n3. Pushing the code:\n   ```bash\n   git push -u origin main\n   ```\n\n### GitHub Pages Setup\n\nAfter pushing to GitHub:\n\n1. Go to your repository settings\n2. Scroll down to the \"Pages\" section\n3. Under \"Source\", select the \"main\" branch\n4. Click \"Save\"\n5. Your site will be available at `https://yourusername.github.io/your-repo-name/`","size_bytes":2511},"check_image_sizes.js":{"content":"const fs = require('fs');\nconst path = require('path');\nconst sharp = require('sharp');\n\n// Function to get image dimensions\nasync function getImageDimensions() {\n  const imagesDir = path.join(__dirname, 'images');\n  \n  // Gallery images\n  const galleryImages = [\n    'gallery-1.webp',\n    'gallery-2.webp',\n    'gallery-3.webp',\n    'gallery-4.webp',\n    'gallery-5.webp',\n    'gallery-6.webp'\n  ];\n  \n  console.log('Gallery Image Dimensions:');\n  console.log('========================');\n  \n  for (const file of galleryImages) {\n    const imagePath = path.join(imagesDir, file);\n    \n    try {\n      const metadata = await sharp(imagePath).metadata();\n      console.log(`${file}: ${metadata.width} x ${metadata.height} pixels`);\n    } catch (error) {\n      console.error(`Failed to get dimensions for ${file}:`, error.message);\n    }\n  }\n}\n\n// Run the function\ngetImageDimensions().catch(console.error);","size_bytes":905},"convert_to_webp.js":{"content":"const fs = require('fs');\nconst path = require('path');\nconst sharp = require('sharp');\n\n// Function to convert images to WebP\nasync function convertToWebP() {\n  const imagesDir = path.join(__dirname, 'assets', 'images');\n  \n  // Read all files in the images directory\n  const files = fs.readdirSync(imagesDir);\n  \n  // Filter for image files\n  const imageFiles = files.filter(file => \n    file.toLowerCase().endsWith('.jpg') || \n    file.toLowerCase().endsWith('.jpeg') || \n    file.toLowerCase().endsWith('.png')\n  );\n  \n  console.log(`Found ${imageFiles.length} images to convert`);\n  \n  for (const file of imageFiles) {\n    const inputPath = path.join(imagesDir, file);\n    const outputFileName = path.parse(file).name + '.webp';\n    const outputPath = path.join(imagesDir, outputFileName);\n    \n    // Check if WebP version already exists\n    if (fs.existsSync(outputPath)) {\n      console.log(`Skipping ${file} - WebP version already exists`);\n      continue;\n    }\n    \n    try {\n      console.log(`Converting ${file} to WebP...`);\n      \n      // Convert to WebP with 80% quality\n      await sharp(inputPath)\n        .webp({ quality: 80 })\n        .toFile(outputPath);\n      \n      console.log(`Successfully converted ${file} to ${outputFileName}`);\n    } catch (error) {\n      console.error(`Failed to convert ${file}:`, error.message);\n    }\n  }\n  \n  console.log('Image conversion complete!');\n}\n\n// Run the conversion\nconvertToWebP().catch(console.error);","size_bytes":1466},"deploy_to_github.sh":{"content":"#!/bin/bash\n\n# Script to deploy the Polban landing page to GitHub\n\necho \"=== Polban Landing Page GitHub Deployment Script ===\"\necho \"\"\n\n# Check if git is installed\nif ! command -v git &> /dev/null\nthen\n    echo \"Git is not installed. Please install Git and try again.\"\n    exit 1\nfi\n\n# Check if we're in a git repository\nif ! git rev-parse --git-dir > /dev/null 2>&1\nthen\n    echo \"Initializing Git repository...\"\n    git init\n    git add .\n    git commit -m \"Initial commit: Polban landing page\"\nfi\n\n# Get repository details from user\necho \"Please provide your GitHub repository details:\"\necho \"\"\nread -p \"GitHub username: \" github_username\nread -p \"Repository name (e.g., polban-landing-page): \" repo_name\n\n# Set the remote origin\necho \"\"\necho \"Setting up remote repository...\"\ngit remote add origin https://github.com/$github_username/$repo_name.git\n\n# Rename master branch to main if needed\ncurrent_branch=$(git branch --show-current)\nif [ \"$current_branch\" = \"master\" ]; then\n    echo \"Renaming branch from master to main...\"\n    git branch -m master main\nfi\n\n# Push to GitHub\necho \"Pushing code to GitHub...\"\ngit push -u origin main\n\necho \"\"\necho \"=== Deployment Complete ===\"\necho \"Your Polban landing page has been deployed to:\"\necho \"https://github.com/$github_username/$repo_name\"\necho \"\"\necho \"You can now view your repository at the URL above.\"","size_bytes":1356},"minify.js":{"content":"const fs = require('fs');\nconst path = require('path');\n\n// Lightweight JS minifier (no external deps)\nfunction simpleMinifyJS(code) {\n  // Remove single-line and multi-line comments, then collapse whitespace\n  return code\n    .replace(/\\/\\*[\\s\\S]*?\\*\\//g, '') // block comments\n    .replace(/(^|[^:])\\/\\/.*$/gm, '$1') // line comments (not after colon to avoid URLs)\n    .replace(/\\n+/g, '\\n')\n    .replace(/\\s+/g, ' ')\n    .replace(/\\s*([{}();,:<>\\[\\]=+\\-*/%&|!?])\\s*/g, '$1')\n    .trim();\n}\n\n// Lightweight CSS minifier (no external deps)\nfunction simpleMinifyCSS(code) {\n  return code\n    .replace(/\\/\\*[\\s\\S]*?\\*\\//g, '') // comments\n    .replace(/\\n+/g, '\\n')\n    .replace(/\\s+/g, ' ')\n    .replace(/\\s*([{};:,>~+])\\s*/g, '$1')\n    .replace(/;}/g, '}')\n    .trim();\n}\n\nfunction ensureDir(dirPath) {\n  if (!fs.existsSync(dirPath)) {\n    fs.mkdirSync(dirPath, { recursive: true });\n  }\n}\n\nfunction readText(filePath) {\n  return fs.existsSync(filePath) ? fs.readFileSync(filePath, 'utf8') : '';\n}\n\nfunction writeText(filePath, content) {\n  ensureDir(path.dirname(filePath));\n  fs.writeFileSync(filePath, content, 'utf8');\n}\n\nfunction main() {\n  const baseDir = __dirname;\n  const jsIn = path.join(baseDir, 'script.js');\n  const cssIn = path.join(baseDir, 'styles.css');\n\n  const jsOut = path.join(baseDir, 'script.min.js');\n  const cssOut = path.join(baseDir, 'styles.min.css');\n\n  const jsSource = readText(jsIn);\n  const cssSource = readText(cssIn);\n\n  if (!jsSource && !cssSource) {\n    console.log('Nothing to minify. Missing script.js and styles.css');\n    process.exit(0);\n  }\n\n  if (jsSource) {\n    try {\n      const minified = simpleMinifyJS(jsSource);\n      writeText(jsOut, minified);\n      console.log(`JS minified → ${path.basename(jsOut)} (${minified.length} bytes)`);\n    } catch (e) {\n      console.error('Failed to minify JS:', e.message);\n      process.exitCode = 1;\n    }\n  }\n\n  if (cssSource) {\n    try {\n      const minified = simpleMinifyCSS(cssSource);\n      writeText(cssOut, minified);\n      console.log(`CSS minified → ${path.basename(cssOut)} (${minified.length} bytes)`);\n    } catch (e) {\n      console.error('Failed to minify CSS:', e.message);\n      process.exitCode = 1;\n    }\n  }\n}\n\nif (require.main === module) {\n  main();\n}\n\n","size_bytes":2266},"src/css/rtl.css":{"content":"/**\n * RTL (Right-to-Left) Styles for Persian and Arabic\n * This file contains styles specifically for RTL languages\n */\n\n/* RTL Base Styles */\n[dir=\"rtl\"] {\n    text-align: right;\n}\n\n[dir=\"rtl\"] body {\n    font-family: 'Vazirmatn', 'IRANSansX', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n}\n\n/* RTL Navigation */\n[dir=\"rtl\"] .nav-links {\n    flex-direction: row-reverse;\n}\n\n[dir=\"rtl\"] .nav-links li {\n    margin-left: 0;\n    margin-right: 2rem;\n}\n\n[dir=\"rtl\"] .nav-links li:last-child {\n    margin-right: 0;\n}\n\n[dir=\"rtl\"] .header-actions {\n    flex-direction: row-reverse;\n}\n\n[dir=\"rtl\"] .header-actions .language-switcher {\n    margin-left: 1rem;\n    margin-right: 0;\n}\n\n[dir=\"rtl\"] .header-actions .theme-toggle {\n    margin-left: 0;\n    margin-right: 1rem;\n}\n\n/* RTL Hero Section */\n[dir=\"rtl\"] .hero-content {\n    text-align: right;\n}\n\n[dir=\"rtl\"] .hero-content h1 {\n    text-align: right;\n}\n\n[dir=\"rtl\"] .hero-content p {\n    text-align: right;\n}\n\n[dir=\"rtl\"] .cta-buttons {\n    justify-content: flex-start;\n}\n\n[dir=\"rtl\"] .cta-buttons .btn:first-child {\n    margin-left: 1rem;\n    margin-right: 0;\n}\n\n[dir=\"rtl\"] .cta-buttons .btn:last-child {\n    margin-left: 0;\n    margin-right: 1rem;\n}\n\n/* RTL Features Section */\n[dir=\"rtl\"] .features h2 {\n    text-align: center;\n}\n\n[dir=\"rtl\"] .feature-grid {\n    direction: rtl;\n}\n\n[dir=\"rtl\"] .feature-card {\n    text-align: right;\n}\n\n[dir=\"rtl\"] .feature-card h3 {\n    text-align: right;\n}\n\n[dir=\"rtl\"] .feature-card p {\n    text-align: right;\n}\n\n/* RTL CTA Section */\n[dir=\"rtl\"] .cta-section {\n    text-align: center;\n}\n\n[dir=\"rtl\"] .cta-section h2 {\n    text-align: center;\n}\n\n[dir=\"rtl\"] .cta-section p {\n    text-align: center;\n}\n\n/* RTL Download Section */\n[dir=\"rtl\"] .download {\n    text-align: center;\n}\n\n[dir=\"rtl\"] .download h2 {\n    text-align: center;\n}\n\n[dir=\"rtl\"] .download p {\n    text-align: center;\n}\n\n[dir=\"rtl\"] .download-buttons {\n    justify-content: center;\n}\n\n[dir=\"rtl\"] .btn-download {\n    text-align: center;\n}\n\n[dir=\"rtl\"] .btn-download i {\n    margin-left: 0.5rem;\n    margin-right: 0;\n}\n\n[dir=\"rtl\"] .platform-notice {\n    text-align: center;\n}\n\n/* RTL Gallery Section */\n[dir=\"rtl\"] .gallery h2 {\n    text-align: center;\n}\n\n[dir=\"rtl\"] .gallery p {\n    text-align: center;\n}\n\n[dir=\"rtl\"] .gallery-grid {\n    direction: rtl;\n}\n\n[dir=\"rtl\"] .gallery-item {\n    text-align: center;\n}\n\n/* RTL FAQ Section */\n[dir=\"rtl\"] .faq h2 {\n    text-align: center;\n}\n\n[dir=\"rtl\"] .faq-accordion {\n    direction: rtl;\n}\n\n[dir=\"rtl\"] .faq-accordion details {\n    text-align: right;\n}\n\n[dir=\"rtl\"] .faq-accordion summary {\n    text-align: right;\n    padding-right: 1rem;\n    padding-left: 0;\n}\n\n[dir=\"rtl\"] .faq-accordion summary::before {\n    right: 0;\n    left: auto;\n    transform: rotate(0deg);\n}\n\n[dir=\"rtl\"] .faq-accordion details[open] summary::before {\n    transform: rotate(180deg);\n}\n\n[dir=\"rtl\"] .faq-accordion p {\n    text-align: right;\n    padding-right: 1rem;\n    padding-left: 0;\n}\n\n/* RTL About Section */\n[dir=\"rtl\"] .about h2 {\n    text-align: center;\n}\n\n[dir=\"rtl\"] .about p {\n    text-align: right;\n}\n\n[dir=\"rtl\"] .about h3 {\n    text-align: right;\n}\n\n[dir=\"rtl\"] .benefits-grid {\n    direction: rtl;\n}\n\n[dir=\"rtl\"] .benefit-card {\n    text-align: right;\n}\n\n[dir=\"rtl\"] .benefit-card h4 {\n    text-align: right;\n}\n\n[dir=\"rtl\"] .benefit-card p {\n    text-align: right;\n}\n\n/* RTL Upcoming Section */\n[dir=\"rtl\"] .upcoming h2 {\n    text-align: center;\n}\n\n[dir=\"rtl\"] .upcoming .feature-grid {\n    direction: rtl;\n}\n\n[dir=\"rtl\"] .upcoming .feature-card {\n    text-align: right;\n}\n\n[dir=\"rtl\"] .upcoming .feature-card h3 {\n    text-align: right;\n}\n\n[dir=\"rtl\"] .upcoming .feature-card p {\n    text-align: right;\n}\n\n/* RTL Footer */\n[dir=\"rtl\"] .footer-links {\n    flex-direction: row-reverse;\n}\n\n[dir=\"rtl\"] .footer-links a {\n    margin-left: 0;\n    margin-right: 2rem;\n}\n\n[dir=\"rtl\"] .footer-links a:last-child {\n    margin-right: 0;\n}\n\n/* RTL Form Elements */\n[dir=\"rtl\"] .form-group {\n    text-align: right;\n}\n\n[dir=\"rtl\"] .form-group label {\n    text-align: right;\n}\n\n[dir=\"rtl\"] .form-group input,\n[dir=\"rtl\"] .form-group textarea {\n    text-align: right;\n    direction: rtl;\n}\n\n[dir=\"rtl\"] .form-group .error-message {\n    text-align: right;\n}\n\n/* RTL Lightbox */\n[dir=\"rtl\"] .lightbox-content {\n    text-align: center;\n}\n\n[dir=\"rtl\"] .lightbox-caption {\n    text-align: center;\n}\n\n[dir=\"rtl\"] .lightbox-prev {\n    left: 20px;\n    right: auto;\n}\n\n[dir=\"rtl\"] .lightbox-next {\n    right: 20px;\n    left: auto;\n}\n\n/* RTL Mobile Menu */\n[dir=\"rtl\"] .nav-links.active {\n    text-align: right;\n}\n\n[dir=\"rtl\"] .nav-links li a {\n    text-align: right;\n}\n\n/* RTL Typography Adjustments */\n[dir=\"rtl\"] h1, [dir=\"rtl\"] h2, [dir=\"rtl\"] h3, [dir=\"rtl\"] h4, [dir=\"rtl\"] h5, [dir=\"rtl\"] h6 {\n    text-align: right;\n}\n\n[dir=\"rtl\"] p {\n    text-align: right;\n}\n\n[dir=\"rtl\"] .container {\n    direction: rtl;\n}\n\n/* RTL Button Adjustments */\n[dir=\"rtl\"] .btn {\n    text-align: center;\n}\n\n[dir=\"rtl\"] .btn i {\n    margin-left: 0.5rem;\n    margin-right: 0;\n}\n\n/* RTL Language Switcher */\n[dir=\"rtl\"] .language-switcher {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    background: var(--card-bg);\n    border: 1px solid var(--border-color);\n    border-radius: 8px;\n    padding: 0.5rem 1rem;\n    color: var(--text-color);\n    cursor: pointer;\n    transition: all 0.3s ease;\n    font-size: 0.875rem;\n    font-weight: 500;\n}\n\n[dir=\"rtl\"] .language-switcher:hover {\n    background: var(--primary);\n    color: white;\n    border-color: var(--primary);\n}\n\n[dir=\"rtl\"] .language-switcher i {\n    font-size: 1rem;\n}\n\n/* RTL Animation Adjustments */\n[dir=\"rtl\"] .slideUp {\n    animation: slideUpRTL 0.6s ease-out forwards;\n}\n\n[dir=\"rtl\"] .slideUpLarge {\n    animation: slideUpLargeRTL 0.8s ease-out forwards;\n}\n\n@keyframes slideUpRTL {\n    from {\n        opacity: 0;\n        transform: translateY(20px) translateX(-20px);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0) translateX(0);\n    }\n}\n\n@keyframes slideUpLargeRTL {\n    from {\n        opacity: 0;\n        transform: translateY(30px) translateX(-30px);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0) translateX(0);\n    }\n}\n\n/* RTL Responsive Adjustments */\n@media (max-width: 768px) {\n    [dir=\"rtl\"] .nav-links {\n        text-align: right;\n    }\n    \n    [dir=\"rtl\"] .nav-links li {\n        margin-right: 0;\n        margin-left: 0;\n        margin-bottom: 1rem;\n    }\n    \n    [dir=\"rtl\"] .hero-content {\n        text-align: center;\n    }\n    \n    [dir=\"rtl\"] .cta-buttons {\n        justify-content: center;\n        flex-direction: column;\n        gap: 1rem;\n    }\n    \n    [dir=\"rtl\"] .cta-buttons .btn {\n        margin: 0;\n    }\n    \n    [dir=\"rtl\"] .download-buttons {\n        flex-direction: column;\n        gap: 1rem;\n    }\n    \n    [dir=\"rtl\"] .footer-links {\n        flex-direction: column;\n        gap: 1rem;\n    }\n    \n    [dir=\"rtl\"] .footer-links a {\n        margin: 0;\n    }\n}\n\n/* RTL Focus and Accessibility */\n[dir=\"rtl\"] *:focus {\n    outline-offset: -2px;\n}\n\n[dir=\"rtl\"] .skip-link {\n    right: 1rem;\n    left: auto;\n}\n\n/* RTL Loading States */\n[dir=\"rtl\"] .loading-spinner {\n    margin-left: 0.5rem;\n    margin-right: 0;\n}\n\n/* RTL Error Messages */\n[dir=\"rtl\"] .error-message {\n    text-align: right;\n    margin-top: 0.25rem;\n}\n\n/* RTL Success Messages */\n[dir=\"rtl\"] .success-message {\n    text-align: right;\n    margin-top: 0.25rem;\n}\n","size_bytes":7428},"src/css/styles.css":{"content":"/*\n * Polban Landing Page Stylesheet\n * Version: 1.0\n * Author: Gemini\n * Last Updated: 2025-09-11\n */\n\n/* 1. Root and Theme Variables\n-------------------------------------------------- */\n:root {\n  /* Light Theme Colors from FlutterFlow - Enhanced for accessibility */\n  --primary: #7E4BB8; /* Increased contrast from #9759C4 */\n  --secondary: #4A5A6A; /* Increased contrast from #50606F */\n  --tertiary: #255A7D; /* Increased contrast from #29638A */\n  --primary-text: #000000;\n  --secondary-text: #4A5A6A; /* Increased contrast from #57636C */\n  --primary-background: #F1F4F8;\n  --secondary-background: #ededed;\n  --accent1: #4B39EF;\n  --accent2: #EE8B60;\n  --accent3: #39D2C0;\n  --success: #249689;\n  --error: #D32F2F; /* Increased contrast from #FF5963 */\n  --warning: #F9CF58;\n  --info: #1C4494;\n  --on-primary: #FFFFFF;\n  --on-secondary: #FFFFFF;\n  --on-tertiary: #FFFFFF;\n\n  /* Additional variables for consistency */\n  --max-width: 1200px;\n  --border-radius: 8px;\n  --box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\n  --transition-speed: 0.3s;\n  --animation-duration: 0.6s;\n}\n\n[data-theme=\"dark\"] {\n  /* Dark Theme Colors from FlutterFlow - Enhanced for accessibility */\n  --primary: #C4A0E0; /* Increased contrast from #B892D5 */\n  --secondary: #C5D4E4; /* Increased contrast from #B8C8D9 */\n  --tertiary: #A5D6FF; /* Increased contrast from #97CCF9 */\n  --primary-text: #FFFFFF;\n  --secondary-text: #B0BCC6; /* Increased contrast from #95A1AC */\n  --primary-background: #1A1F24;\n  --secondary-background: #1e2227;\n  --accent1: #4B39EF;\n  --accent2: #EE8B60;\n  --accent3: #39D2C0;\n  --success: #249689;\n  --error: #FF6B6B; /* Increased contrast from #FF5963 */\n  --warning: #F9CF58;\n  --info: #1C4494;\n  --on-primary: #000000;\n  --on-secondary: #000000;\n  --on-tertiary: #000000;\n}\n\n/* 2. Base and Reset Styles\n-------------------------------------------------- */\n/* Language Switcher Styles */\n.language-switcher {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    background: var(--card-bg);\n    border: 1px solid var(--border-color);\n    border-radius: 8px;\n    padding: 0.5rem 1rem;\n    color: var(--text-color);\n    cursor: pointer;\n    transition: all 0.3s ease;\n    font-size: 0.875rem;\n    font-weight: 500;\n    margin-right: 1rem;\n}\n\n.language-switcher:hover {\n    background: var(--primary);\n    color: white;\n    border-color: var(--primary);\n    transform: translateY(-2px);\n}\n\n.language-switcher i {\n    font-size: 1rem;\n}\n\n.language-switcher span {\n    font-weight: 600;\n    letter-spacing: 0.5px;\n}\n\n/* RTL Animation Classes */\n.rtl-animations .slideUp {\n    animation: slideUpRTL 0.6s ease-out forwards;\n}\n\n.rtl-animations .slideUpLarge {\n    animation: slideUpLargeRTL 0.8s ease-out forwards;\n}\n\n@keyframes slideUpRTL {\n    from {\n        opacity: 0;\n        transform: translateY(20px) translateX(-20px);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0) translateX(0);\n    }\n}\n\n@keyframes slideUpLargeRTL {\n    from {\n        opacity: 0;\n        transform: translateY(30px) translateX(-30px);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0) translateX(0);\n    }\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nhtml {\n  scroll-behavior: smooth;\n  direction: ltr; /* Changed to LTR for English version */\n}\n\nbody {\n  font-family: 'Vazirmatn', 'IRANSansX', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  line-height: 1.7;\n  color: var(--primary-text);\n  background-color: var(--primary-background);\n\n  transition: background-color var(--transition-speed), color var(--transition-speed);\n  font-size: 16px;\n}\n\n/* Set RTL for the Persian version if needed */\nbody[lang=\"fa\"] {\n    direction: rtl;\n}\n\nh1, h2, h3, h4, h5, h6 {\n  font-weight: 700;\n  color: var(--primary-text);\n  line-height: 1.3;\n  margin-bottom: 1rem;\n}\n\nh1 {\n  font-size: 2.5rem;\n}\n\nh2 {\n  font-size: 2rem;\n}\n\nh3 {\n  font-size: 1.5rem;\n  margin-top: 1.25rem;\n}\n\nh4 {\n  font-size: 1.25rem;\n  margin-top: 1rem;\n}\n\np {\n  margin-bottom: 1rem;\n}\n\na {\n  text-decoration: none;\n  color: var(--primary);\n  transition: color var(--transition-speed);\n}\n\na:hover, a:focus {\n  color: var(--tertiary);\n  outline: 2px solid var(--primary);\n  outline-offset: 2px;\n}\n\nul {\n  list-style: none;\n}\n\nimg {\n  max-width: 100%;\n  height: auto;\n  display: block;\n}\n\nheader img {\n    width: 45px;\n    height: auto;\n}\n\n/* 3. Layout and Container\n-------------------------------------------------- */\n.container {\n  width: 100%;\n  max-width: var(--max-width);\n  margin: 0 auto;\n  padding: 0 1rem;\n}\n\n/* 4. Header and Navigation\n-------------------------------------------------- */\nheader {\n  background-color: var(--secondary-background);\n  box-shadow: var(--box-shadow);\n  position: fixed;\n  width: 100%;\n  top: 0;\n  z-index: 1000;\n  padding: 1rem 0;\n}\n\nnav {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.logo-container {\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n}\n\n.logo-container img {\n  width: 40px;\n  height: 40px;\n}\n\n.logo-container .logo-dark {\n  display: none;\n}\n\n[data-theme=\"dark\"] .logo-container .logo-light {\n  display: none;\n}\n\n[data-theme=\"dark\"] .logo-container .logo-dark {\n  display: block;\n}\n\n.logo-svg {\n  width: 40px;\n  height: 40px;\n}\n\n.logo-text {\n  font-size: 1.8rem;\n  font-weight: bold;\n  color: var(--primary);\n}\n\n.nav-links {\n  display: flex;\n  align-items: center;\n  gap: 2rem;\n}\n\n.nav-links a {\n  font-weight: 500;\n  font-size: 1rem;\n  color: var(--primary-text);\n  padding: 0.5rem 1rem;\n  border-radius: var(--border-radius);\n  transition: background-color var(--transition-speed);\n}\n\n.nav-links a:hover, .nav-links a:focus, .nav-links a.active {\n  background-color: rgba(151, 89, 196, 0.1);\n  color: var(--primary);\n  outline: 2px solid var(--primary);\n  outline-offset: -2px;\n}\n\n.nav-links a.active {\n  font-weight: 700;\n}\n\n.header-actions {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.theme-toggle, .hamburger {\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 1.25rem;\n  color: var(--primary-text);\n  padding: 0.5rem;\n  border-radius: var(--border-radius);\n  transition: background-color var(--transition-speed);\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.theme-toggle:hover, .theme-toggle:focus, .hamburger:hover, .hamburger:focus {\n  background-color: rgba(151, 89, 196, 0.1);\n  outline: 2px solid var(--primary);\n  outline-offset: -2px;\n}\n\n/* Hamburger menu for mobile */\n.hamburger {\n  display: none;\n}\n\n\n#animated-image {\n    width: 25%; /* Adjust the width as needed */\n    display: block;\n    margin: 0 auto; /* Center the image */\n    animation: fadeIn 2s ease-in-out infinite; /* Apply the animation */\n}\n\n\n@media (max-width: 768px) {\n  .hamburger {\n    display: flex;\n  }\n  \n  .nav-links {\n    position: fixed;\n    top: 70px;\n    right: 1rem;\n    background-color: var(--secondary-background);\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 0;\n    padding: 1rem;\n    border-radius: var(--border-radius);\n    box-shadow: var(--box-shadow);\n    opacity: 0;\n    transform: translateY(-10px);\n    transition: opacity 0.3s, transform 0.3s;\n    display: none;\n    z-index: 1000;\n    min-width: 200px;\n  }\n  \n  .nav-links.active {\n    display: flex;\n  }\n  \n  .nav-links li {\n    width: 100%;\n  }\n  \n  .nav-links a {\n    padding: 0.75rem 1rem;\n    width: 100%;\n    border-radius: 0;\n  }\n  \n  .nav-links a:hover, .nav-links a:focus {\n    border-radius: var(--border-radius);\n  }\n}\n\n/* 5. Hero Section\n-------------------------------------------------- */\n.hero {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 3rem;\n  padding: 6rem 1rem;\n  min-height: 90vh;\n  background: linear-gradient(135deg, var(--primary-background) 0%, color-mix(in srgb, var(--primary) 15%, var(--primary-background)) 100%);\n  position: relative;\n  overflow: hidden;\n  opacity: 0;\n  animation: fadeIn var(--animation-duration) ease-out forwards;\n  width: 100%;\n  max-width: none;\n  margin: 0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.05);\n}\n\n.hero::before {\n  content: \"\";\n  position: absolute;\n  top: -50%;\n  left: -50%;\n  width: 200%;\n  height: 200%;\n  background: \n    radial-gradient(circle at 30% 30%, rgba(126, 75, 184, 0.1) 0%, transparent 20%),\n    radial-gradient(circle at 70% 70%, rgba(37, 90, 125, 0.1) 0%, transparent 20%);\n  animation: rotate 20s linear infinite;\n  z-index: 0;\n}\n\n.hero .container {\n  width: 100%;\n  max-width: var(--max-width);\n  margin: 0 auto;\n  padding: 0 1rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 3rem;\n  position: relative;\n  z-index: 1;\n}\n\n.hero-content {\n  flex: 1;\n  transform: translateY(20px);\n  opacity: 0;\n  animation: slideUp var(--animation-duration) ease-out var(--animation-duration) forwards;\n}\n\n.hero-content h1 {\n  font-size: 3.0rem;\n  margin-bottom: 1.5rem;\n  line-height: 1.2;\n  background: linear-gradient(90deg, var(--primary), var(--tertiary));\n  -webkit-background-clip: text;\n  background-clip: text;\n  color: transparent;\n  position: relative;\n  animation: fadeInUp 1s ease-out forwards;\n  opacity: 0;\n  animation-delay: 0.3s;\n}\n\n/* Typing animation styles */\n#typing-text {\n  background: linear-gradient(90deg, var(--primary), var(--tertiary));\n  -webkit-background-clip: text;\n  background-clip: text;\n  color: transparent;\n  display: inline-block;\n}\n\n.cursor {\n  display: inline-block;\n  width: 3px;\n  height: 1.2em;\n  background-color: var(--primary);\n  margin-left: 3px;\n  animation: blink 1s infinite;\n  vertical-align: middle;\n}\n\n@keyframes blink {\n  0%, 100% { opacity: 1; }\n  50% { opacity: 0; }\n}\n\n/* Hide static text on smaller screens to prevent line breaks */\n@media (max-width: 768px) {\n  .static-text {\n    display: none;\n  }\n  \n  #hero-heading {\n    font-size: 2.5rem;\n  }\n  \n  /* Adjust font size for typing text on mobile */\n  #typing-text {\n    font-size: 1.8rem;\n  }\n}\n\n.hero-subheading {\n  font-size: 1.5rem;\n  color: var(--secondary-text);\n  margin-bottom: 1.5rem;\n  font-weight: 500;\n}\n\n.hero-content p {\n  font-size: 1.2rem;\n  margin-bottom: 2.5rem;\n  color: var(--secondary-text);\n  line-height: 1.6;\n  max-width: 600px;\n}\n\n.cta-buttons {\n  display: flex;\n  gap: 1rem;\n  flex-wrap: wrap;\n}\n\n.hero-image {\n  flex: 1;\n  text-align: center;\n  transform: translateY(20px);\n  opacity: 0;\n  animation: slideUp var(--animation-duration) ease-out calc(var(--animation-duration) * 1.5) forwards;\n}\n\n.hero-image-container {\n  position: relative;\n  display: inline-block;\n  border-radius: 24px;\n  overflow: hidden;\n  box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);\n  transform: perspective(1000px) rotateY(-5deg) rotateX(5deg);\n  transition: transform 0.5s ease;\n  max-width: 100%;\n}\n\n.hero-image-container::before {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(45deg, var(--primary), var(--tertiary));\n  opacity: 0.15;\n  z-index: 1;\n  border-radius: 24px;\n}\n\n.hero-image-container::after {\n  content: \"\";\n  position: absolute;\n  top: -20px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 60px;\n  height: 5px;\n  background: var(--secondary-background);\n  border-radius: 5px;\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\n  z-index: 2;\n}\n\n.hero-image img {\n  border-radius: 24px;\n  object-fit: cover;\n  max-width: 100%;\n  height: auto;\n  position: relative;\n  z-index: 2;\n  display: block;\n}\n\n/* Animation keyframes for hero section */\n@keyframes rotate {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes pulse {\n  0% {\n    transform: scale(1);\n    opacity: 0.7;\n  }\n  50% {\n    transform: scale(1.02);\n    opacity: 0.9;\n  }\n  100% {\n    transform: scale(1);\n    opacity: 0.7;\n  }\n}\n\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes expandWidth {\n  from {\n    width: 0;\n    opacity: 0;\n  }\n  to {\n    width: 100px;\n    opacity: 1;\n  }\n}\n\n/* 6. Buttons\n-------------------------------------------------- */\n.btn {\n  padding: 1rem 2rem;\n  border-radius: 50px;\n  font-weight: 600;\n  transition: all var(--transition-speed);\n  cursor: pointer;\n  border: 2px solid transparent;\n  font-size: 1rem;\n  text-align: center;\n  min-width: 160px;\n  min-height: 56px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  overflow: hidden;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.btn::before {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(45deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0));\n  transform: translateX(-100%);\n  transition: transform 0.6s ease;\n}\n\n.btn:hover::before {\n  transform: translateX(100%);\n}\n\n.btn.primary {\n  background: linear-gradient(90deg, var(--primary), #6A3D9A);\n  color: var(--on-primary);\n  border: none;\n}\n\n.btn.primary:hover, .btn.primary:focus {\n  transform: translateY(-3px);\n  box-shadow: 0 6px 12px rgba(126, 75, 184, 0.3);\n  outline: 2px solid var(--primary);\n  outline-offset: 2px;\n}\n\n.btn.secondary {\n  background: linear-gradient(90deg, var(--secondary), #3A4A5A);\n  color: var(--on-secondary);\n  border: none;\n}\n\n.btn.secondary:hover, .btn.secondary:focus {\n  transform: translateY(-3px);\n  box-shadow: 0 6px 12px rgba(74, 90, 106, 0.3);\n  outline: 2px solid var(--secondary);\n  outline-offset: 2px;\n}\n\n.btn.tertiary {\n  background: linear-gradient(90deg, var(--tertiary), #1F4D6D);\n  color: var(--on-tertiary);\n  border: none;\n}\n\n.btn.tertiary:hover, .btn.tertiary:focus {\n  transform: translateY(-3px);\n  box-shadow: 0 6px 12px rgba(37, 90, 125, 0.3);\n  outline: 2px solid var(--tertiary);\n  outline-offset: 2px;\n}\n\n/* 7. Features Section\n-------------------------------------------------- */\n.features {\n  padding: 6rem 1rem;\n  background-color: var(--secondary-background);\n  opacity: 0;\n  transform: translateY(30px);\n  margin: 0;\n}\n\n.features h2 {\n  text-align: center;\n  font-size: 2.5rem;\n  margin-bottom: 4rem;\n  margin-top: 0;\n}\n\n.feature-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n  gap: 2.5rem;\n}\n\n.feature-card {\n  background-color: var(--primary-background);\n  padding: 2rem;\n  border-radius: var(--border-radius);\n  box-shadow: var(--box-shadow);\n  transition: transform var(--transition-speed), box-shadow var(--transition-speed);\n  border-left: 4px solid transparent;\n  border: 1px solid rgba(0, 0, 0, 0.05);\n  opacity: 0;\n  transform: translateY(20px);\n  text-align: center; /* Center content in feature cards */\n}\n\n.feature-card:hover, .feature-card:focus {\n  transform: translateY(-10px);\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.12);\n  outline: 2px solid var(--primary);\n  outline-offset: 2px;\n}\n\n.feature-card.primary { border-color: var(--primary); }\n.feature-card.secondary { border-color: var(--secondary); }\n.feature-card.tertiary { border-color: var(--tertiary); }\n\n.feature-card h3 {\n  font-size: 1.3rem;\n  margin-bottom: 1rem;\n  color: var(--primary-text);\n  text-align: center; /* Ensure headings are centered */\n}\n\n.feature-card p {\n  color: var(--secondary-text);\n  margin-bottom: 0;\n  font-size: 0.95rem;\n  line-height: 1.6;\n  text-align: center; /* Ensure paragraphs are centered */\n}\n\n/* 8. Download Section\n-------------------------------------------------- */\n.download {\n    padding: 8rem 1rem;\n    background-color: var(--primary-background);\n    text-align: center;\n    background-image: url(\"data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%239C92AC' fill-opacity='0.05' fill-rule='evenodd'%3E%3Ccircle cx='3' cy='3' r='3'/%3E%3Ccircle cx='13' cy='13' r='3'/%3E%3C/g%3E%3C/svg%3E\");\n    opacity: 0;\n    transform: translateY(30px);\n    margin: 0;\n}\n\n.download .logo-container {\n    display: flex;\n    justify-content: center;\n    margin-bottom: 1rem;\n    position: relative;\n    opacity: 0;\n}\n\n.download .logo-container::before {\n    content: \"\";\n    position: absolute;\n    width: 300px;\n    height: 300px;\n    border-radius: 50%;\n    background: radial-gradient(circle, color-mix(in srgb, var(--primary) 30%, transparent) 0%, transparent 70%);\n    z-index: -1;\n    animation: pulse 3s ease-in-out infinite alternate;\n    box-shadow: 0 0 40px color-mix(in srgb, var(--primary) 40%, transparent);\n}\n\n.download .logo-container::after {\n    content: \"\";\n    position: absolute;\n    width: 350px;\n    height: 350px;\n    border-radius: 50%;\n    background: radial-gradient(circle, color-mix(in srgb, var(--tertiary) 20%, transparent) 0%, transparent 75%);\n    z-index: -2;\n    animation: pulse 4s ease-in-out infinite alternate-reverse;\n    opacity: 0.7;\n}\n\n.download .logo-container img {\n    width: 250px;\n    height: 250px;\n    border-radius: 50%;\n    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);\n    border: 5px solid var(--secondary-background);\n    animation: float 6s ease-in-out infinite;\n    transition: transform 0.3s ease;\n}\n\n.download .logo-container .logo-dark {\n    display: none;\n}\n\n[data-theme=\"dark\"] .download .logo-container .logo-light {\n    display: none;\n}\n\n[data-theme=\"dark\"] .download .logo-container .logo-dark {\n    display: block;\n}\n\n.download .logo-container img:hover {\n    transform: scale(1.05);\n}\n\n.download h2 {\n    font-size: 2.5rem;\n    margin-bottom: 1rem;\n    color: var(--primary-text);\n    margin-top: 0;\n    background: linear-gradient(90deg, var(--primary), var(--tertiary));\n    -webkit-background-clip: text;\n    background-clip: text;\n    color: transparent;\n    position: relative;\n    display: inline-block;\n    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    animation: fadeInUp 1s ease-out forwards;\n    opacity: 0;\n}\n\n.download p {\n    font-size: 1.1rem;\n    color: var(--secondary-text);\n    margin-bottom: 3rem;\n    max-width: 600px;\n    margin-left: auto;\n    margin-right: auto;\n    line-height: 1.6;\n    animation: fadeInUp 1s ease-out forwards;\n    opacity: 0;\n    animation-delay: 0.5s;\n}\n\n.platform-notice {\n    font-size: 1rem;\n    color: var(--secondary-text);\n    margin-top: 2rem;\n    font-style: italic;\n    text-align: center;\n}\n\n.download-buttons {\n    display: flex;\n    justify-content: center;\n    gap: 1.5rem;\n    flex-wrap: wrap;\n    margin-top: 2rem;\n}\n\n.btn-download {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n    padding: 1.25rem 2rem;\n    border-radius: var(--border-radius);\n    background-color: var(--secondary-background);\n    color: var(--primary-text);\n    box-shadow: var(--box-shadow);\n    transition: all var(--transition-speed);\n    border: 1px solid rgba(255, 255, 255, 0.05);\n    opacity: 0;\n    transform: translateY(20px);\n    min-width: 240px;\n    min-height: 72px;\n    text-decoration: none; /* Ensure links are styled as buttons */\n    animation: fadeInUp 1s ease-out forwards;\n    animation-delay: calc(var(--delay, 0) * 0.2s);\n}\n\n.btn-download:hover, .btn-download:focus {\n    transform: translateY(-5px);\n    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.12);\n    border-color: var(--primary);\n    outline: 2px solid var(--primary);\n    outline-offset: 2px;\n}\n\n.btn-download.disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    pointer-events: none;\n}\n\n.btn-download.disabled:hover {\n    transform: translateY(0);\n    box-shadow: var(--box-shadow);\n}\n\n.btn-download i {\n    font-size: 2rem;\n    color: var(--primary);\n}\n\n.btn-download.disabled i {\n    color: var(--secondary-text);\n}\n\n.btn-download span {\n    text-align: left;\n    line-height: 1.2;\n}\n\n.btn-download span small {\n    display: block;\n    font-size: 0.8rem;\n    color: var(--secondary-text);\n    font-weight: normal;\n    margin-top: 0.25rem;\n}\n\n/* 8. About Section\n-------------------------------------------------- */\n.about {\n  padding: 6rem 1rem;\n  background-image: url(\"data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%239C92AC' fill-opacity='0.1' fill-rule='evenodd'%3E%3Cpath d='M3 0h1v20H3V0zm14 0h1v20h-1V0zM0 3h20v1H0V3zm0 14h20v1H0v-1z'/%3E%3C/g%3E%3C/svg%3E\");\n  margin: 0;\n}\n\n.about h2 {\n  text-align: center;\n  font-size: 2.5rem;\n  margin-bottom: 2rem;\n  margin-top: 0;\n}\n\n.about h3 {\n  font-size: 1.8rem;\n  margin-top: 3rem;\n  margin-bottom: 1.5rem;\n  text-align: center;\n}\n\n.about p {\n  max-width: 800px;\n  margin: 0 auto;\n  font-size: 1.1rem;\n  line-height: 1.8;\n  color: var(--secondary-text);\n  text-align: center;\n}\n\n.benefits-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 2rem;\n  margin-top: 2rem;\n}\n\n.benefit-card {\n  background-color: var(--secondary-background);\n  padding: 1.5rem;\n  border-radius: var(--border-radius);\n  box-shadow: var(--box-shadow);\n  border-left: 4px solid var(--primary);\n  transition: transform var(--transition-speed);\n  text-align: center; /* Center content in benefit cards */\n}\n\n.benefit-card:hover {\n  transform: translateY(-5px);\n}\n\n.benefit-card h4 {\n  font-size: 1.3rem;\n  margin-bottom: 1rem;\n  color: var(--primary-text);\n}\n\n.benefit-card p {\n  color: var(--secondary-text);\n  margin-bottom: 0;\n  text-align: center; /* Center text in benefit cards */\n  font-size: 1rem;\n}\n\n/* 9. Contact Section\n-------------------------------------------------- */\n.contact {\n  padding: 6rem 1rem;\n  background: linear-gradient(180deg, var(--secondary-background) 0%, color-mix(in srgb, var(--secondary-background) 95%, black) 100%);\n  margin: 0;\n}\n\n.contact h2 {\n  text-align: center;\n  font-size: 2.5rem;\n  margin-bottom: 3rem;\n  margin-top: 0;\n}\n\nform {\n  max-width: 600px;\n  margin: 0 auto;\n}\n\n.form-group {\n  margin-bottom: 1.5rem;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 600;\n  color: var(--primary-text);\n}\n\n.form-group input,\n.form-group textarea {\n  width: 100%;\n  padding: 0.8rem;\n  border: 1px solid var(--secondary-text);\n  border-radius: var(--border-radius);\n  font-size: 1rem;\n  background-color: var(--primary-background);\n  color: var(--primary-text);\n  transition: border-color var(--transition-speed), box-shadow var(--transition-speed);\n}\n\n.form-group input:focus,\n.form-group textarea:focus {\n  outline: none;\n  border-color: var(--primary);\n  box-shadow: 0 0 0 3px color-mix(in srgb, var(--primary) 25%, transparent);\n}\n\n.form-group input.error,\n.form-group textarea.error {\n    border-color: var(--error);\n}\n\n.error-message {\n    color: var(--error);\n    font-size: 0.875rem;\n    margin-top: 0.25rem;\n}\n\n/* Contact Page Specific Styles\n-------------------------------------------------- */\n.contact-hero {\n    padding: 8rem 1rem 4rem;\n    text-align: center;\n    background: linear-gradient(135deg, var(--primary-background) 0%, color-mix(in srgb, var(--primary-background) 90%, var(--primary)) 100%);\n}\n\n.contact-hero h1 {\n    font-size: 2.8rem;\n    margin-bottom: 1.5rem;\n    color: var(--primary);\n}\n\n.contact-hero p {\n    font-size: 1.2rem;\n    max-width: 700px;\n    margin: 0 auto;\n    color: var(--secondary-text);\n}\n\n.contact-content {\n    padding: 4rem 1rem;\n}\n\n.contact-grid {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 3rem;\n    margin-top: 2rem;\n}\n\n@media (max-width: 768px) {\n    .contact-grid {\n        grid-template-columns: 1fr;\n        gap: 2rem;\n    }\n}\n\n.contact-form-section h2,\n.contact-info-section h2 {\n    font-size: 2rem;\n    margin-bottom: 2rem;\n    color: var(--primary);\n    text-align: left;\n}\n\n.contact-info-section h2 {\n    margin-top: 0;\n}\n\n.contact-method {\n    margin-bottom: 2rem;\n    padding: 1.5rem;\n    background-color: var(--secondary-background);\n    border-radius: var(--border-radius);\n    box-shadow: var(--box-shadow);\n}\n\n.contact-method h3 {\n    font-size: 1.4rem;\n    margin-bottom: 1rem;\n    color: var(--primary-text);\n    display: flex;\n    align-items: center;\n    gap: 0.75rem;\n}\n\n.contact-method h3 i {\n    color: var(--primary);\n}\n\n.contact-method p {\n    margin-bottom: 1rem;\n    color: var(--secondary-text);\n}\n\n.contact-method ol {\n    padding-left: 1.5rem;\n    color: var(--secondary-text);\n}\n\n.contact-method ol li {\n    margin-bottom: 0.5rem;\n}\n\n.telegram-contact {\n    text-align: center;\n    margin: 1.5rem 0;\n}\n\n.telegram-btn {\n    display: inline-flex;\n    align-items: center;\n    gap: 0.5rem;\n    background-color: #0088cc;\n    color: white;\n    border: none;\n}\n\n.telegram-btn:hover,\n.telegram-btn:focus {\n    background-color: #0077b3;\n    color: white;\n}\n\n.telegram-contact .small {\n    font-size: 0.9rem;\n    margin-top: 0.5rem;\n    color: var(--secondary-text);\n}\n\n.faq-cta {\n    padding: 5rem 1rem;\n    text-align: center;\n    background-color: var(--secondary-background);\n    margin-top: 3rem;\n    border-radius: var(--border-radius);\n}\n\n.faq-cta h2 {\n    font-size: 2rem;\n    margin-bottom: 1rem;\n    color: var(--primary);\n}\n\n.faq-cta p {\n    font-size: 1.1rem;\n    max-width: 600px;\n    margin: 0 auto 2rem;\n    color: var(--secondary-text);\n}\n\n.required {\n    color: var(--error);\n}\n\n/* 10. Footer\n-------------------------------------------------- */\nfooter {\n  text-align: center;\n  padding: 2rem 1rem;\n  margin-top: 2rem;\n  background-color: var(--secondary-background);\n  border-top: 1px solid var(--secondary-text);\n}\n\n/* 11. UX Enhancements\n-------------------------------------------------- */\n.nav-links a.active {\n  color: var(--primary);\n  font-weight: 700;\n}\n\n.back-to-top {\n  position: fixed;\n  bottom: 2rem;\n  right: 2rem;\n  background-color: var(--primary);\n  color: var(--on-primary);\n  width: 48px;\n  height: 48px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.5rem;\n  z-index: 100;\n  opacity: 0;\n  visibility: hidden;\n  transform: translateY(20px);\n  transition: opacity 0.3s, visibility 0.3s, transform 0.3s;\n}\n\n.back-to-top.visible {\n  opacity: 1;\n  visibility: visible;\n  transform: translateY(0);\n}\n\n.back-to-top:hover, .back-to-top:focus {\n  background-color: #6A3D9A;\n  outline: 2px solid var(--primary);\n  outline-offset: 2px;\n}\n\n/* 12. Gallery Section\n-------------------------------------------------- */\n.gallery {\n  padding: 6rem 1rem;\n  background-color: var(--secondary-background);\n  background-image: url(\"data:image/svg+xml,%3Csvg width='40' height='40' viewBox='0 0 40 40' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%239C92AC' fill-opacity='0.1' fill-rule='evenodd'%3E%3Cpath d='M0 40L40 0H20L0 20M40 40V20L20 40'/%3E%3C/g%3E%3C/svg%3E\");\n  opacity: 0;\n  transform: translateY(30px);\n  margin: 0;\n  border-top: 1px solid rgba(0, 0, 0, 0.05);\n  border-bottom: 1px solid rgba(0, 0, 0, 0.05);\n}\n\n.gallery h2 {\n  text-align: center;\n  font-size: 2.5rem;\n  margin-bottom: 4rem;\n  margin-top: 0;\n}\n\n.gallery-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n  gap: 2.5rem;\n}\n\n.gallery-item {\n  position: relative;\n  border-radius: var(--border-radius);\n  overflow: hidden;\n  box-shadow: var(--box-shadow);\n  transition: transform var(--transition-speed), box-shadow var(--transition-speed);\n  background-color: var(--primary-background);\n  border: 1px solid rgba(0, 0, 0, 0.05);\n  min-height: 400px;\n}\n\n.gallery-item:hover {\n  transform: translateY(-10px);\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.15);\n}\n\n.gallery-placeholder {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: linear-gradient(135deg, var(--primary-background), var(--secondary-background));\n  z-index: 1;\n  transition: opacity 0.3s ease;\n}\n\n.gallery-placeholder i {\n  font-size: 3rem;\n  color: var(--primary);\n  opacity: 0.7;\n  transition: transform 0.3s ease;\n}\n\n.gallery-item:hover .gallery-placeholder i {\n  transform: scale(1.1);\n}\n\n.gallery-image {\n  width: 100%;\n  height: auto;\n  object-fit: contain;\n  position: relative;\n  z-index: 2;\n  opacity: 0;\n  transition: opacity 0.5s ease, transform 0.3s ease;\n  max-height: 600px;\n}\n\n.gallery-image.loaded {\n  opacity: 1;\n}\n\n.gallery-image.loaded + .gallery-placeholder {\n  opacity: 0;\n}\n\n.gallery-item:hover .gallery-image.loaded {\n  transform: scale(1.02);\n}\n\n/* Pulsing animation for placeholders */\n.gallery-placeholder::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n  animation: pulse 1.5s ease-in-out infinite;\n}\n\n@keyframes pulse {\n  0% {\n    transform: translateX(-100%);\n  }\n  100% {\n    transform: translateX(100%);\n  }\n}\n\n/* Fade in animation for gallery items */\n.gallery-item.fade-in {\n  animation: fadeIn 0.6s ease-out forwards;\n}\n\n/* Add responsive adjustments for gallery */\n@media (max-width: 992px) {\n  .gallery-grid {\n    gap: 1.5rem;\n  }\n}\n\n@media (max-width: 768px) {\n  .gallery-grid {\n    grid-template-columns: 1fr;\n  }\n  \n  .gallery-item {\n    min-height: 300px;\n  }\n  \n  .gallery-image {\n    max-height: 400px;\n  }\n}\n\n/* 13. FAQ Section\n-------------------------------------------------- */\n.faq {\n  padding: 6rem 1rem;\n  background: linear-gradient(180deg, var(--primary-background) 0%, color-mix(in srgb, var(--primary-background) 95%, white) 100%);\n  opacity: 0;\n  transform: translateY(30px);\n  margin: 0;\n}\n\n.faq h2 {\n  text-align: center;\n  font-size: 2.5rem;\n  margin-bottom: 4rem;\n  margin-top: 0;\n}\n\n.faq-accordion {\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n.faq-accordion details {\n  background-color: var(--secondary-background);\n  border-radius: var(--border-radius);\n  margin-bottom: 1rem;\n  box-shadow: var(--box-shadow);\n  opacity: 0;\n  transform: translateY(20px);\n}\n\n.faq-accordion summary {\n  padding: 1.5rem;\n  font-weight: 600;\n  cursor: pointer;\n  outline: none;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 1.1rem;\n  color: var(--primary-text);\n}\n\n.faq-accordion summary:hover, .faq-accordion summary:focus {\n  background-color: rgba(151, 89, 196, 0.05);\n  border-radius: var(--border-radius);\n  outline: 2px solid var(--primary);\n  outline-offset: -2px;\n}\n\n.faq-accordion summary::after {\n  content: '\\25BC'; /* Down arrow */\n  font-size: 1rem;\n  transition: transform 0.3s;\n}\n\n.faq-accordion details[open] summary::after {\n  transform: rotate(180deg);\n}\n\n.faq-accordion details p {\n  padding: 0 1.5rem 1.5rem;\n  color: var(--secondary-text);\n}\n\n/* 14. Blog Pages\n-------------------------------------------------- */\n.blog-header {\n  text-align: center;\n  padding: 5rem 1rem;\n  background-color: var(--secondary-background);\n}\n\n.blog-header h1 {\n  font-size: 3rem;\n  margin-bottom: 1rem;\n}\n\n.blog-posts {\n  padding: 5rem 1rem;\n}\n\n.post-card {\n  background-color: var(--secondary-background);\n  border-radius: var(--border-radius);\n  box-shadow: var(--box-shadow);\n  margin-bottom: 3rem;\n  overflow: hidden;\n}\n\n.post-card img {\n  width: 100%;\n  height: 250px;\n  object-fit: cover;\n}\n\n.post-card h2 {\n  font-size: 2rem;\n  margin: 1.5rem;\n}\n\n.post-card p {\n  color: var(--secondary-text);\n  margin: 0 1.5rem 1.5rem;\n}\n\n.post-card .btn {\n  margin: 0 1.5rem 1.5rem;\n}\n\n.post-content {\n  padding: 5rem 1rem;\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n.post-content h1 {\n  font-size: 3rem;\n  margin-bottom: 1rem;\n}\n\n.post-meta {\n  color: var(--secondary-text);\n  margin-bottom: 3rem;\n}\n\n.post-content h2 {\n  font-size: 2rem;\n  margin-top: 3rem;\n  margin-bottom: 1.5rem;\n}\n\n.post-content p {\n  line-height: 1.8;\n  margin-bottom: 1.5rem;\n}\n\n.legal-content {\n    padding: 5rem 1rem;\n    max-width: 800px;\n    margin: 0 auto;\n}\n\n.legal-content h1 {\n    font-size: 3rem;\n    margin-bottom: 1rem;\n}\n\n.legal-content h2 {\n    font-size: 2rem;\n    margin-top: 3rem;\n    margin-bottom: 1.5rem;\n}\n\n.legal-content p {\n    line-height: 1.8;\n    margin-bottom: 1.5rem;\n}\n\n/* 15. CTA Section\n-------------------------------------------------- */\n.cta-section {\n  padding: 6rem 1rem;\n  background-color: var(--secondary-background);\n  border-top: 1px solid rgba(0, 0, 0, 0.05);\n  border-bottom: 1px solid rgba(0, 0, 0, 0.05);\n  opacity: 0;\n  transform: translateY(30px);\n  margin: 0;\n}\n\n.cta-section .container {\n  text-align: center;\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n.cta-section h2 {\n  font-size: 2.5rem;\n  margin-bottom: 1rem;\n  color: var(--primary-text);\n  margin-top: 0;\n}\n\n.cta-section p {\n  font-size: 1.2rem;\n  color: var(--secondary-text);\n  margin-bottom: 2rem;\n  line-height: 1.6;\n}\n\n/* 11. Responsive Design\n-------------------------------------------------- */\n\n@media (max-width: 992px) {\n    .nav-links {\n        display: none;\n        flex-direction: column;\n        position: absolute;\n        top: 100%;\n        right: 0;\n        background-color: var(--secondary-background);\n        width: 100%;\n        box-shadow: var(--box-shadow);\n        padding: 1rem 0;\n        gap: 0;\n        transform: translateY(-10px);\n        opacity: 0;\n        transition: all 0.3s ease-in-out;\n    }\n\n    .nav-links.active {\n        display: flex;\n        transform: translateY(0);\n        opacity: 1;\n    }\n\n    .nav-links li {\n        width: 100%;\n    }\n\n    .nav-links a {\n        display: block;\n        padding: 1rem 1.5rem;\n        border-radius: 0;\n        font-size: 1.1rem;\n    }\n\n    .hamburger {\n        display: flex;\n    }\n    \n    .header-actions {\n        gap: 0.5rem;\n    }\n    \n    .logo-text {\n        font-size: 1.5rem;\n    }\n    \n    .logo-svg {\n        width: 32px;\n        height: 32px;\n    }\n}\n\n/* Large screens (desktops) */\n@media (max-width: 1200px) {\n  .hero-content h1 {\n    font-size: 2.0rem;\n  }\n  \n  .container {\n    padding: 0 1.5rem;\n  }\n}\n\n/* Medium screens (tablets, landscape) */\n@media (max-width: 992px) {\n  .hero {\n    padding-top: 6rem;\n  }\n  \n  .hero .container {\n    flex-direction: column;\n    text-align: center;\n    gap: 2rem;\n  }\n\n  .hero-content {\n    order: 2;\n  }\n\n  .hero-content h1 {\n    font-size: 2.5rem;\n  }\n\n  .hero-subheading {\n    font-size: 1.3rem;\n  }\n\n  .hero-image {\n    order: 1;\n    margin-bottom: 1rem;\n  }\n\n  .cta-buttons {\n    justify-content: center;\n  }\n\n  .nav-links {\n    display: none; /* Simple hide for now, can be replaced with a hamburger menu */\n  }\n  \n  .feature-grid {\n    gap: 1.5rem;\n  }\n  \n  .testimonial-grid {\n    gap: 1.5rem;\n  }\n  \n  .download-buttons {\n    gap: 1rem;\n  }\n}\n\n/* Small screens (tablets, portrait) */\n@media (max-width: 768px) {\n  body {\n    font-size: 0.95rem;\n  }\n\n  .hero {\n    padding-top: 5rem;\n  }\n  \n  .hero .container {\n    padding: 0 1rem;\n  }\n\n  .hero-content h1 {\n    font-size: 2.0rem;\n  }\n  \n  .hero-subheading {\n    font-size: 1.1rem;\n  }\n\n  .hero-content p {\n    font-size: 1rem;\n  }\n\n  .features h2, .about h2, .contact h2 {\n    font-size: 2rem;\n  }\n\n  .feature-grid {\n    grid-template-columns: 1fr;\n  }\n  \n  .testimonial-grid {\n    grid-template-columns: 1fr;\n  }\n  \n  .btn {\n    min-width: 140px;\n    min-height: 48px;\n    padding: 0.8rem 1.5rem;\n  }\n  \n  .btn-download {\n    min-width: 200px;\n    min-height: 64px;\n    padding: 1rem 1.5rem;\n  }\n  \n  .download-buttons {\n    flex-direction: column;\n    align-items: center;\n  }\n  \n  .faq-accordion {\n    padding: 0 1rem;\n  }\n}\n\n/* Extra small screens (phones) */\n@media (max-width: 576px) {\n  .hero {\n    padding-top: 4rem;\n  }\n  \n  .hero .container {\n    padding: 0 0.5rem;\n  }\n  \n  .hero-content h1 {\n    font-size: 2rem;\n  }\n  \n  .hero-subheading {\n    font-size: 1rem;\n  }\n\n  .cta-buttons {\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .btn {\n    width: 100%;\n    max-width: 320px;\n  }\n  \n  .btn-download {\n    width: 100%;\n    max-width: 320px;\n  }\n  \n  h1 {\n    font-size: 2rem;\n  }\n  \n  h2 {\n    font-size: 1.75rem;\n  }\n  \n  .features, .cta-section, .download, .testimonials, .faq, .about, .contact {\n    padding: 4rem 1rem;\n  }\n}\n\n/* 12. Accessibility\n-------------------------------------------------- */\n/* Add a visible focus style for keyboard users */\n:focus {\n  outline: 2px solid var(--primary);\n  outline-offset: 2px;\n}\n\n:focus:not(:focus-visible) {\n  outline: none;\n}\n\n:focus-visible {\n  outline: 2px solid var(--primary);\n  outline-offset: 2px;\n}\n\n/* Skip to content link */\n.skip-link {\n  position: absolute;\n  top: -40px;\n  left: 0;\n  background: var(--primary);\n  color: white;\n  padding: 8px;\n  z-index: 100;\n  transition: top 0.3s;\n  border-radius: var(--border-radius);\n}\n\n.skip-link:focus {\n  top: 0;\n}\n\n/* Ensure sufficient color contrast */\n.high-contrast {\n  color: #000000;\n  background-color: #FFFFFF;\n}\n\n/* 13. Loading Indicators\n-------------------------------------------------- */\n.loading-spinner {\n  display: inline-block;\n  width: 20px;\n  height: 20px;\n  border: 3px solid rgba(255, 255, 255, 0.3);\n  border-radius: 50%;\n  border-top-color: #FFFFFF;\n  animation: spin 1s ease-in-out infinite;\n  margin-right: 10px;\n  vertical-align: middle;\n}\n\n@keyframes spin {\n  to { transform: rotate(360deg); }\n}\n\n/* 14. Lazy Loading\n-------------------------------------------------- */\n.lazy-load {\n  opacity: 0;\n  transition: opacity 0.3s;\n}\n\n.lazy-load.loaded {\n  opacity: 1;\n}\n\n/* Animation Keyframes\n-------------------------------------------------- */\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes slideUp {\n  from {\n    transform: translateY(20px);\n    opacity: 0;\n  }\n  to {\n    transform: translateY(0);\n    opacity: 1;\n  }\n}\n\n@keyframes slideUpLarge {\n  from {\n    transform: translateY(30px);\n    opacity: 0;\n  }\n  to {\n    transform: translateY(0);\n    opacity: 1;\n  }\n}\n\n@keyframes float {\n  0% {\n    transform: translateY(0px);\n  }\n  50% {\n    transform: translateY(-15px);\n  }\n  100% {\n    transform: translateY(0px);\n  }\n}\n\n/* Lightbox Styles */\n.lightbox {\n  display: none;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.9);\n  z-index: 9999;\n  text-align: center;\n  overflow: hidden;\n}\n\n.lightbox-content {\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n}\n\n.lightbox-image {\n  max-width: 90%;\n  max-height: 90%;\n  object-fit: contain;\n  border-radius: 4px;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);\n}\n\n.lightbox-caption {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.7);\n  color: white;\n  padding: 1rem;\n  font-size: 1rem;\n}\n\n.lightbox-close {\n  position: absolute;\n  top: 20px;\n  right: 30px;\n  color: white;\n  font-size: 40px;\n  font-weight: bold;\n  cursor: pointer;\n  z-index: 10000;\n  width: 50px;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  transition: background-color 0.3s;\n}\n\n.lightbox-close:hover {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n\n.lightbox-prev, .lightbox-next {\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  color: white;\n  font-size: 50px;\n  font-weight: bold;\n  cursor: pointer;\n  z-index: 10000;\n  width: 60px;\n  height: 60px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  background-color: rgba(0, 0, 0, 0.3);\n  transition: background-color 0.3s;\n  text-decoration: none;\n}\n\n.lightbox-prev:hover, .lightbox-next:hover {\n  background-color: rgba(0, 0, 0, 0.6);\n}\n\n.lightbox-prev {\n  left: 30px;\n}\n\n.lightbox-next {\n  right: 30px;\n}\n\n/* Responsive adjustments for lightbox */\n@media (max-width: 768px) {\n  .lightbox-image {\n    max-width: 95%;\n    max-height: 85%;\n  }\n  \n  .lightbox-prev, .lightbox-next {\n    font-size: 30px;\n    width: 40px;\n    height: 40px;\n  }\n  \n  .lightbox-prev {\n    left: 15px;\n  }\n  \n  .lightbox-next {\n    right: 15px;\n  }\n  \n  .lightbox-close {\n    font-size: 30px;\n    top: 10px;\n    right: 15px;\n    width: 40px;\n    height: 40px;\n  }\n  \n}\n","size_bytes":39786},"src/js/localization.js":{"content":"/**\n * Localization System for Polban Landing Page\n * Supports English and Persian with RTL layout\n */\n\nclass LocalizationManager {\n    constructor() {\n        this.currentLanguage = 'en';\n        this.translations = {};\n        this.rtlLanguages = ['fa', 'ar'];\n        this.init();\n    }\n\n    async init() {\n        // Load translations first\n        await this.loadTranslations();\n        \n        // Set initial language based on browser preference or saved preference\n        const savedLang = localStorage.getItem('polban-language');\n        const browserLang = navigator.language.split('-')[0];\n        \n        if (savedLang && this.isLanguageSupported(savedLang)) {\n            this.currentLanguage = savedLang;\n        } else if (this.isLanguageSupported(browserLang)) {\n            this.currentLanguage = browserLang;\n        }\n        \n        // Apply initial language\n        this.applyLanguage(this.currentLanguage);\n        \n        // Create language switcher\n        this.createLanguageSwitcher();\n        \n        console.log('Localization system initialized with language:', this.currentLanguage);\n    }\n\n    async loadTranslations() {\n        try {\n            const [enTranslations, faTranslations] = await Promise.all([\n                fetch('./src/locales/en.json').then(response => {\n                    if (!response.ok) throw new Error(`Failed to load en.json: ${response.status}`);\n                    return response.json();\n                }),\n                fetch('./src/locales/fa.json').then(response => {\n                    if (!response.ok) throw new Error(`Failed to load fa.json: ${response.status}`);\n                    return response.json();\n                })\n            ]);\n            \n            this.translations = {\n                en: enTranslations,\n                fa: faTranslations\n            };\n            \n            console.log('Translations loaded successfully:', this.translations);\n        } catch (error) {\n            console.error('Error loading translations:', error);\n            // Fallback to basic translations if files fail to load\n            this.translations = {\n                en: this.getFallbackTranslations('en'),\n                fa: this.getFallbackTranslations('fa')\n            };\n        }\n    }\n\n    getFallbackTranslations(lang) {\n        if (lang === 'fa') {\n            return {\n                meta: { title: \"پولبان - اپلیکیشن مدیریت مالی\", description: \"مدیریت مالی چندزبانه\" },\n                navigation: { features: \"ویژگی‌ها\", about: \"درباره\", gallery: \"گالری\", faq: \"سوالات\", contact: \"تماس\", download: \"دانلود\", blog: \"وبلاگ\" },\n                hero: { title: \"پولبان - \", subtitle: \"همراه شخصی مالی شما\", cta_explore: \"کشف ویژگی‌ها\", cta_download: \"دانلود کنید\" },\n                common: { skip_to_content: \"رفتن به محتوا\", back_to_top: \"بازگشت به بالا\" }\n            };\n        }\n        return {\n            meta: { title: \"Polban - Financial Management App\", description: \"Multilingual financial management\" },\n            navigation: { features: \"Features\", about: \"About\", gallery: \"Gallery\", faq: \"FAQ\", contact: \"Contact\", download: \"Download\", blog: \"Blog\" },\n            hero: { title: \"Polban - \", subtitle: \"Your Personal Finance Companion\", cta_explore: \"Explore Features\", cta_download: \"Download Now\" },\n            common: { skip_to_content: \"Skip to main content\", back_to_top: \"Back to top\" }\n        };\n    }\n\n    isLanguageSupported(lang) {\n        return ['en', 'fa'].includes(lang);\n    }\n\n    isRTL(lang) {\n        return this.rtlLanguages.includes(lang);\n    }\n\n    applyLanguage(lang) {\n        if (!this.translations[lang]) {\n            console.warn(`Translations for language ${lang} not found`);\n            return;\n        }\n\n        console.log(`Applying language: ${lang}`, this.translations[lang]);\n        \n        this.currentLanguage = lang;\n        localStorage.setItem('polban-language', lang);\n        \n        // Update HTML attributes\n        document.documentElement.lang = lang;\n        document.documentElement.dir = this.isRTL(lang) ? 'rtl' : 'ltr';\n        \n        // Update meta tags\n        this.updateMetaTags();\n        \n        // Update all translatable elements\n        this.updateElements();\n        \n        // Update typing animation phrases\n        this.updateTypingAnimation();\n        \n        // Update form validation messages\n        this.updateFormValidation();\n        \n        // Trigger custom event for other scripts\n        document.dispatchEvent(new CustomEvent('languageChanged', {\n            detail: { language: lang, isRTL: this.isRTL(lang) }\n        }));\n        \n        console.log(`Language ${lang} applied successfully`);\n    }\n\n    updateMetaTags() {\n        const meta = this.translations[this.currentLanguage].meta;\n        \n        // Update title\n        document.title = meta.title;\n        \n        // Update meta description\n        const metaDesc = document.querySelector('meta[name=\"description\"]');\n        if (metaDesc) metaDesc.content = meta.description;\n        \n        // Update meta keywords\n        const metaKeywords = document.querySelector('meta[name=\"keywords\"]');\n        if (metaKeywords) metaKeywords.content = meta.keywords;\n        \n        // Update Open Graph tags\n        const ogTitle = document.querySelector('meta[property=\"og:title\"]');\n        if (ogTitle) ogTitle.content = meta.title;\n        \n        const ogDesc = document.querySelector('meta[property=\"og:description\"]');\n        if (ogDesc) ogDesc.content = meta.description;\n    }\n\n    updateElements() {\n        const t = this.translations[this.currentLanguage];\n        \n        console.log('Updating elements for language:', this.currentLanguage);\n        console.log('Available translations:', t);\n        \n        try {\n            // Navigation\n            if (t.navigation) this.updateNavigation(t.navigation);\n            \n            // Hero section\n            if (t.hero) this.updateHero(t.hero);\n            \n            // Features section\n            if (t.features) this.updateFeatures(t.features);\n            \n            // CTA section\n            if (t.cta) this.updateCTA(t.cta);\n            \n            // Download section\n            if (t.download) this.updateDownload(t.download);\n            \n            // Gallery section\n            if (t.gallery) this.updateGallery(t.gallery);\n            \n            // FAQ section\n            if (t.faq) this.updateFAQ(t.faq);\n            \n            // About section\n            if (t.about) this.updateAbout(t.about);\n            \n            // Upcoming section\n            if (t.upcoming) this.updateUpcoming(t.upcoming);\n            \n            // Footer\n            if (t.footer) this.updateFooter(t.footer);\n            \n            // Common elements\n            if (t.common) this.updateCommon(t.common);\n            \n            console.log('Elements updated successfully');\n        } catch (error) {\n            console.error('Error updating elements:', error);\n        }\n    }\n\n    updateNavigation(nav) {\n        console.log('Updating navigation with:', nav);\n        const navLinks = document.querySelectorAll('.nav-links a');\n        const navTexts = [nav.features, nav.about, nav.gallery, nav.faq, nav.contact, nav.download, nav.blog];\n        \n        console.log('Found nav links:', navLinks.length);\n        console.log('Nav texts:', navTexts);\n        \n        navLinks.forEach((link, index) => {\n            if (navTexts[index]) {\n                console.log(`Updating nav link ${index}: ${link.textContent} -> ${navTexts[index]}`);\n                link.textContent = navTexts[index];\n            }\n        });\n    }\n\n    updateHero(hero) {\n        console.log('Updating hero with:', hero);\n        \n        // Update hero title\n        const heroTitle = document.querySelector('#hero-heading .static-text');\n        if (heroTitle) {\n            console.log('Updating hero title:', heroTitle.textContent, '->', hero.title);\n            heroTitle.textContent = hero.title;\n        }\n        \n        // Update hero subtitle\n        const heroSubtitle = document.querySelector('.hero-subheading');\n        if (heroSubtitle) {\n            console.log('Updating hero subtitle:', heroSubtitle.textContent, '->', hero.subtitle);\n            heroSubtitle.textContent = hero.subtitle;\n        }\n        \n        // Update hero description\n        const heroDesc = document.querySelector('.hero p');\n        if (heroDesc) {\n            console.log('Updating hero description');\n            heroDesc.textContent = hero.description;\n        }\n        \n        // Update CTA buttons\n        const ctaButtons = document.querySelectorAll('.hero .btn');\n        if (ctaButtons[0]) {\n            console.log('Updating CTA button 1:', ctaButtons[0].textContent, '->', hero.cta_explore);\n            ctaButtons[0].textContent = hero.cta_explore;\n        }\n        if (ctaButtons[1]) {\n            console.log('Updating CTA button 2:', ctaButtons[1].textContent, '->', hero.cta_download);\n            ctaButtons[1].textContent = hero.cta_download;\n        }\n    }\n\n    updateFeatures(features) {\n        console.log('Updating features with:', features);\n        \n        // Update features title\n        const featuresTitle = document.querySelector('#features-heading');\n        if (featuresTitle) {\n            console.log('Updating features title:', featuresTitle.textContent, '->', features.title);\n            featuresTitle.textContent = features.title;\n        }\n        \n        // Update feature cards\n        const featureCards = document.querySelectorAll('.feature-card');\n        const featureKeys = [\n            'multilingual', 'quick_signup', 'unlimited_accounts', 'unlimited_categories',\n            'transaction_tagging', 'dual_calendars', 'multi_currency', 'transaction_types',\n            'scheduled_transactions', 'smart_suggestions', 'financial_charts', 'pie_charts',\n            'report_storage', 'transaction_filters', 'balance_sheet', 'graphical_distribution',\n            'transaction_analysis', 'customization', 'advanced_reporting'\n        ];\n        \n        console.log('Found feature cards:', featureCards.length);\n        console.log('Feature keys:', featureKeys);\n        \n        featureCards.forEach((card, index) => {\n            const key = featureKeys[index];\n            if (key && features[key]) {\n                const title = card.querySelector('h3');\n                const description = card.querySelector('p');\n                \n                if (title) {\n                    console.log(`Updating feature ${index} title:`, title.textContent, '->', features[key].title);\n                    title.textContent = features[key].title;\n                }\n                if (description) {\n                    console.log(`Updating feature ${index} description`);\n                    description.textContent = features[key].description;\n                }\n            }\n        });\n    }\n\n    updateCTA(cta) {\n        console.log('Updating CTA with:', cta);\n        \n        const ctaTitle = document.querySelector('#cta-heading');\n        if (ctaTitle) {\n            console.log('Updating CTA title:', ctaTitle.textContent, '->', cta.title);\n            ctaTitle.textContent = cta.title;\n        }\n        \n        const ctaDesc = document.querySelector('.cta-section p');\n        if (ctaDesc) {\n            console.log('Updating CTA description');\n            ctaDesc.textContent = cta.description;\n        }\n        \n        const ctaButton = document.querySelector('.cta-section .btn');\n        if (ctaButton) {\n            console.log('Updating CTA button:', ctaButton.textContent, '->', cta.button);\n            ctaButton.textContent = cta.button;\n        }\n    }\n\n    updateDownload(download) {\n        console.log('Updating download with:', download);\n        \n        const downloadTitle = document.querySelector('#download-heading');\n        if (downloadTitle) {\n            console.log('Updating download title:', downloadTitle.textContent, '->', download.title);\n            downloadTitle.textContent = download.title;\n        }\n        \n        const downloadDesc = document.querySelector('.download p');\n        if (downloadDesc) {\n            console.log('Updating download description');\n            downloadDesc.textContent = download.description;\n        }\n        \n        const downloadButtons = document.querySelectorAll('.btn-download span');\n        const buttonTexts = [download.cafe_bazaar, download.google_play, download.windows, download.app_store];\n        \n        console.log('Found download buttons:', downloadButtons.length);\n        console.log('Button texts:', buttonTexts);\n        \n        downloadButtons.forEach((button, index) => {\n            if (buttonTexts[index]) {\n                console.log(`Updating download button ${index}:`, button.innerHTML, '->', buttonTexts[index]);\n                button.innerHTML = buttonTexts[index].replace(' <br> ', '<br>');\n            }\n        });\n        \n        const platformNotice = document.querySelector('.platform-notice');\n        if (platformNotice) {\n            console.log('Updating platform notice');\n            platformNotice.textContent = download.platform_notice;\n        }\n    }\n\n    updateGallery(gallery) {\n        console.log('Updating gallery with:', gallery);\n        \n        const galleryTitle = document.querySelector('#gallery-heading');\n        if (galleryTitle) {\n            console.log('Updating gallery title:', galleryTitle.textContent, '->', gallery.title);\n            galleryTitle.textContent = gallery.title;\n        }\n        \n        const galleryDesc = document.querySelector('.gallery p');\n        if (galleryDesc) {\n            console.log('Updating gallery description');\n            galleryDesc.textContent = gallery.description;\n        }\n        \n        const clickToView = document.querySelector('.gallery .text-center p');\n        if (clickToView) {\n            console.log('Updating click to view text');\n            clickToView.textContent = gallery.click_to_view;\n        }\n        \n        // Update alt texts\n        const galleryImages = document.querySelectorAll('.gallery-item img');\n        const altKeys = ['dashboard', 'charts', 'accounts', 'transfers', 'calendar', 'reports'];\n        \n        console.log('Found gallery images:', galleryImages.length);\n        console.log('Alt keys:', altKeys);\n        \n        galleryImages.forEach((img, index) => {\n            const key = altKeys[index];\n            if (key && gallery.alt_texts[key]) {\n                console.log(`Updating gallery image ${index} alt text:`, img.alt, '->', gallery.alt_texts[key]);\n                img.alt = gallery.alt_texts[key];\n            }\n        });\n    }\n\n    updateFAQ(faq) {\n        console.log('Updating FAQ with:', faq);\n        \n        const faqTitle = document.querySelector('#faq-heading');\n        if (faqTitle) {\n            console.log('Updating FAQ title:', faqTitle.textContent, '->', faq.title);\n            faqTitle.textContent = faq.title;\n        }\n        \n        const faqItems = document.querySelectorAll('.faq-accordion details');\n        const faqKeys = ['free_use', 'security', 'import_data', 'languages', 'multi_currency', 'scheduled', 'reports'];\n        \n        console.log('Found FAQ items:', faqItems.length);\n        console.log('FAQ keys:', faqKeys);\n        \n        faqItems.forEach((item, index) => {\n            const key = faqKeys[index];\n            if (key && faq.questions[key]) {\n                const summary = item.querySelector('summary');\n                const answer = item.querySelector('p');\n                \n                if (summary) {\n                    console.log(`Updating FAQ ${index} question:`, summary.textContent, '->', faq.questions[key].question);\n                    summary.textContent = faq.questions[key].question;\n                }\n                if (answer) {\n                    console.log(`Updating FAQ ${index} answer`);\n                    answer.textContent = faq.questions[key].answer;\n                }\n            }\n        });\n    }\n\n    updateAbout(about) {\n        console.log('Updating about with:', about);\n        \n        const aboutTitle = document.querySelector('#about-heading');\n        if (aboutTitle) {\n            console.log('Updating about title:', aboutTitle.textContent, '->', about.title);\n            aboutTitle.textContent = about.title;\n        }\n        \n        const aboutDesc = document.querySelector('.about p');\n        if (aboutDesc) {\n            console.log('Updating about description');\n            aboutDesc.textContent = about.description;\n        }\n        \n        const designedTitle = document.querySelector('.about h3');\n        if (designedTitle) {\n            console.log('Updating designed title:', designedTitle.textContent, '->', about.designed_for_everyone);\n            designedTitle.textContent = about.designed_for_everyone;\n        }\n        \n        const designedDesc = document.querySelector('.about h3 + p');\n        if (designedDesc) {\n            console.log('Updating designed description');\n            designedDesc.textContent = about.designed_description;\n        }\n        \n        const benefitsTitle = document.querySelector('.about h3:nth-of-type(2)');\n        if (benefitsTitle) {\n            console.log('Updating benefits title:', benefitsTitle.textContent, '->', about.key_benefits);\n            benefitsTitle.textContent = about.key_benefits;\n        }\n        \n        // Update benefit cards\n        const benefitCards = document.querySelectorAll('.benefit-card');\n        const benefitKeys = ['global_accessibility', 'multi_currency_simplicity', 'smart_automation', 'comprehensive_analytics'];\n        \n        console.log('Found benefit cards:', benefitCards.length);\n        console.log('Benefit keys:', benefitKeys);\n        \n        benefitCards.forEach((card, index) => {\n            const key = benefitKeys[index];\n            if (key && about.benefits[key]) {\n                const title = card.querySelector('h4');\n                const description = card.querySelector('p');\n                \n                if (title) {\n                    console.log(`Updating benefit ${index} title:`, title.textContent, '->', about.benefits[key].title);\n                    title.textContent = about.benefits[key].title;\n                }\n                if (description) {\n                    console.log(`Updating benefit ${index} description`);\n                    description.textContent = about.benefits[key].description;\n                }\n            }\n        });\n    }\n\n    updateUpcoming(upcoming) {\n        console.log('Updating upcoming with:', upcoming);\n        \n        const upcomingTitle = document.querySelector('#upcoming-heading');\n        if (upcomingTitle) {\n            console.log('Updating upcoming title:', upcomingTitle.textContent, '->', upcoming.title);\n            upcomingTitle.textContent = upcoming.title;\n        }\n        \n        const upcomingCards = document.querySelectorAll('.upcoming .feature-card');\n        const upcomingKeys = ['windows', 'ios'];\n        \n        console.log('Found upcoming cards:', upcomingCards.length);\n        console.log('Upcoming keys:', upcomingKeys);\n        \n        upcomingCards.forEach((card, index) => {\n            const key = upcomingKeys[index];\n            if (key && upcoming[key]) {\n                const title = card.querySelector('h3');\n                const description = card.querySelector('p');\n                \n                if (title) {\n                    console.log(`Updating upcoming ${index} title:`, title.textContent, '->', upcoming[key].title);\n                    title.textContent = upcoming[key].title;\n                }\n                if (description) {\n                    console.log(`Updating upcoming ${index} description`);\n                    description.textContent = upcoming[key].description;\n                }\n            }\n        });\n    }\n\n    updateFooter(footer) {\n        console.log('Updating footer with:', footer);\n        \n        const copyright = document.querySelector('footer p');\n        if (copyright) {\n            console.log('Updating footer copyright:', copyright.textContent, '->', footer.copyright);\n            copyright.textContent = footer.copyright;\n        }\n        \n        const footerLinks = document.querySelectorAll('.footer-links a');\n        const linkTexts = [footer.privacy, footer.terms];\n        \n        console.log('Found footer links:', footerLinks.length);\n        console.log('Link texts:', linkTexts);\n        \n        footerLinks.forEach((link, index) => {\n            if (linkTexts[index]) {\n                console.log(`Updating footer link ${index}:`, link.textContent, '->', linkTexts[index]);\n                link.textContent = linkTexts[index];\n            }\n        });\n    }\n\n    updateCommon(common) {\n        console.log('Updating common with:', common);\n        \n        const skipLink = document.querySelector('.skip-link');\n        if (skipLink) {\n            console.log('Updating skip link:', skipLink.textContent, '->', common.skip_to_content);\n            skipLink.textContent = common.skip_to_content;\n        }\n        \n        const backToTop = document.querySelector('.back-to-top');\n        if (backToTop) {\n            console.log('Updating back to top aria-label:', backToTop.getAttribute('aria-label'), '->', common.back_to_top);\n            backToTop.setAttribute('aria-label', common.back_to_top);\n        }\n    }\n\n    updateTypingAnimation() {\n        const phrases = this.translations[this.currentLanguage].hero.typing_phrases;\n        \n        console.log('Updating typing animation with phrases:', phrases);\n        \n        // Update the phrases array in the main script\n        if (window.updateTypingPhrases) {\n            console.log('Calling updateTypingPhrases function');\n            window.updateTypingPhrases(phrases);\n        } else {\n            console.warn('updateTypingPhrases function not found');\n        }\n    }\n\n    updateFormValidation() {\n        // This will be handled by the main script when form validation is needed\n        const formErrors = this.translations[this.currentLanguage].common.form_errors;\n        console.log('Updating form validation messages:', formErrors);\n        window.formValidationMessages = formErrors;\n    }\n\n    createLanguageSwitcher() {\n        console.log('Creating language switcher...');\n        \n        // Create language switcher button\n        const headerActions = document.querySelector('.header-actions');\n        if (!headerActions) {\n            console.error('Header actions not found');\n            return;\n        }\n        \n        // Remove existing language switcher if any\n        const existingSwitcher = document.querySelector('.language-switcher');\n        if (existingSwitcher) {\n            existingSwitcher.remove();\n        }\n        \n        const languageSwitcher = document.createElement('button');\n        languageSwitcher.className = 'language-switcher';\n        languageSwitcher.setAttribute('aria-label', 'Switch language');\n        languageSwitcher.innerHTML = `\n            <i class=\"fas fa-globe\" aria-hidden=\"true\"></i>\n            <span>${this.currentLanguage.toUpperCase()}</span>\n        `;\n        \n        // Add click handler\n        languageSwitcher.addEventListener('click', () => {\n            const newLang = this.currentLanguage === 'en' ? 'fa' : 'en';\n            console.log('Switching language from', this.currentLanguage, 'to', newLang);\n            this.applyLanguage(newLang);\n            this.updateLanguageSwitcher(newLang);\n        });\n        \n        // Insert before theme toggle\n        headerActions.insertBefore(languageSwitcher, headerActions.firstChild);\n        \n        console.log('Language switcher created successfully');\n    }\n\n    updateLanguageSwitcher(lang) {\n        const switcher = document.querySelector('.language-switcher span');\n        if (switcher) {\n            console.log('Updating language switcher to:', lang);\n            switcher.textContent = lang.toUpperCase();\n        } else {\n            console.warn('Language switcher span not found');\n        }\n    }\n\n    getTranslation(key) {\n        const keys = key.split('.');\n        let translation = this.translations[this.currentLanguage];\n        \n        console.log('Getting translation for key:', key, 'in language:', this.currentLanguage);\n        \n        for (const k of keys) {\n            if (translation && translation[k]) {\n                translation = translation[k];\n            } else {\n                console.warn(`Translation not found for key: ${key}`);\n                return key; // Return key if translation not found\n            }\n        }\n        \n        console.log('Translation found:', translation);\n        return translation;\n    }\n}\n\n// Initialize localization system\nfunction initializeLocalization() {\n    console.log('Initializing localization system...');\n    try {\n        window.localizationManager = new LocalizationManager();\n        console.log('Localization system initialized successfully');\n    } catch (error) {\n        console.error('Error initializing localization system:', error);\n    }\n}\n\n// Wait for DOM to be ready\nif (document.readyState === 'loading') {\n    console.log('DOM is loading, waiting for DOMContentLoaded event');\n    document.addEventListener('DOMContentLoaded', initializeLocalization);\n} else {\n    console.log('DOM is already loaded, initializing immediately');\n    // DOM is already loaded\n    initializeLocalization();\n}\n\n// Export for use in other scripts\nwindow.LocalizationManager = LocalizationManager;\n\n// Debug function to manually test language switching\nwindow.testLanguageSwitch = function(lang) {\n    if (window.localizationManager) {\n        console.log('Manually switching to language:', lang);\n        window.localizationManager.applyLanguage(lang);\n    } else {\n        console.error('Localization manager not found');\n    }\n};\n\n// Debug function to check current state\nwindow.debugLocalization = function() {\n    if (window.localizationManager) {\n        console.log('Current language:', window.localizationManager.currentLanguage);\n        console.log('Available translations:', Object.keys(window.localizationManager.translations));\n        console.log('Is RTL:', window.localizationManager.isRTL(window.localizationManager.currentLanguage));\n        console.log('Current translations:', window.localizationManager.translations[window.localizationManager.currentLanguage]);\n    } else {\n        console.error('Localization manager not found');\n    }\n};\n","size_bytes":26825},"src/js/script.js":{"content":"document.addEventListener('DOMContentLoaded', function() {\n    const themeToggle = document.getElementById('themeToggle');\n    const themeIcon = themeToggle.querySelector('i');\n    const hamburger = document.getElementById('hamburger');\n    const navLinks = document.getElementById('navLinks');\n    \n    // Typing animation elements\n    const typingText = document.getElementById('typing-text');\n    let phrases = [\n        \"Financial Management, Simple and Global\",\n        \"Multilingual Support for Persian & Arabic\",\n        \"Track Transactions Effortlessly\",\n        \"Multi-Currency Management Made Easy\",\n        \"Smart Financial Insights at Your Fingertips\"\n    ];\n    let i = 0;\n    let j = 0;\n    let currentPhrase = [];\n    let isDeleting = false;\n    let isEnd = false;\n    let typingSpeed = 100;\n\n    // Typing animation function\n    function loop() {\n        isEnd = false;\n        \n        if (i < phrases.length) {\n            // Typing forward\n            if (!isDeleting && j <= phrases[i].length) {\n                currentPhrase.push(phrases[i].charAt(j));\n                j++;\n                typingText.innerHTML = currentPhrase.join(\"\");\n            }\n\n            // Deleting backward\n            if (isDeleting && j >= 0) {\n                currentPhrase.pop();\n                j--;\n                typingText.innerHTML = currentPhrase.join(\"\");\n            }\n\n            // When phrase is fully typed\n            if (j === phrases[i].length) {\n                isEnd = true;\n                isDeleting = true;\n                typingSpeed = 100;\n            }\n\n            // When phrase is fully deleted\n            if (isDeleting && j === 0) {\n                currentPhrase = [];\n                isDeleting = false;\n                i++;\n                \n                // Reset to first phrase after last phrase\n                if (i === phrases.length) {\n                    i = 0;\n                }\n                \n                typingSpeed = 200;\n            }\n        }\n        \n        // Adjust typing speed based on action\n        const speed = isEnd ? 2000 : isDeleting ? 50 : typingSpeed;\n        \n        setTimeout(loop, speed);\n    }\n\n    // Function to update typing phrases (called by localization system)\n    window.updateTypingPhrases = function(newPhrases) {\n        phrases = newPhrases;\n        // Reset animation if it's running\n        i = 0;\n        j = 0;\n        currentPhrase = [];\n        isDeleting = false;\n        isEnd = false;\n        if (typingText) {\n            typingText.innerHTML = \"\";\n            setTimeout(() => {\n                loop();\n            }, 1000);\n        }\n    };\n\n    // Start typing animation if element exists\n    if (typingText) {\n        // Apply gradient styling to typing text\n        typingText.style.background = \"linear-gradient(90deg, var(--primary), var(--tertiary))\";\n        typingText.style.webkitBackgroundClip = \"text\";\n        typingText.style.backgroundClip = \"text\";\n        typingText.style.color = \"transparent\";\n        \n        // Add a slight delay before starting the animation to ensure elements are loaded\n        setTimeout(() => {\n            loop();\n        }, 1000);\n    }\n    \n    // Lightbox elements\n    const lightbox = document.getElementById('lightbox');\n    const lightboxImg = document.getElementById('lightbox-img');\n    const lightboxCaption = document.querySelector('.lightbox-caption');\n    const lightboxClose = document.querySelector('.lightbox-close');\n    const lightboxPrev = document.querySelector('.lightbox-prev');\n    const lightboxNext = document.querySelector('.lightbox-next');\n    let currentImageIndex = 0;\n    let galleryImages = [];\n\n    // Interactive hero container elements\n    const splashScreen = document.getElementById('splash-screen');\n    const splashContainer = document.querySelector('.splash-container');\n    const splashLogo = document.querySelector('.splash-logo');\n    const heroSection = document.querySelector('.hero');\n    const heroImage = document.querySelector('.hero-image-container');\n\n    // Add floating animation to hero image\n    function addFloatingAnimation() {\n        if (!heroImage) return;\n        \n        let floatInterval;\n        \n        function floatElement() {\n            const floatY = Math.sin(Date.now() / 1200) * 5;\n            heroImage.style.transform = `perspective(1000px) rotateY(-5deg) rotateX(5deg) translateY(${floatY}px)`;\n        }\n        \n        // Start floating animation\n        floatInterval = setInterval(floatElement, 50);\n        \n        // Pause animation on hover\n        heroImage.addEventListener('mouseenter', () => {\n            clearInterval(floatInterval);\n        });\n        \n        // Resume animation on mouse leave\n        heroImage.addEventListener('mouseleave', () => {\n            floatInterval = setInterval(floatElement, 50);\n        });\n    }\n    \n    // Mouse move interaction for parallax effect in hero section\n    if (heroSection) {\n        heroSection.addEventListener('mousemove', (e) => {\n            const xAxis = (window.innerWidth / 2 - e.pageX) / 50;\n            const yAxis = (window.innerHeight / 2 - e.pageY) / 50;\n            \n            if (heroImage) {\n                heroImage.style.transform = `perspective(1000px) rotateY(${-5 + xAxis/2}deg) rotateX(${5 - yAxis/2}deg) scale(1.02)`;\n            }\n        });\n\n        // Reset positions when mouse leaves\n        heroSection.addEventListener('mouseleave', () => {\n            if (heroImage) {\n                heroImage.style.transform = 'perspective(1000px) rotateY(-5deg) rotateX(5deg)';\n                // Resume floating animation\n                addFloatingAnimation();\n            }\n        });\n    }\n    \n    // Mouse move interaction for parallax effect\n    if (splashScreen) {\n        splashScreen.addEventListener('mousemove', (e) => {\n            const xAxis = (window.innerWidth / 2 - e.pageX) / 25;\n            const yAxis = (window.innerHeight / 2 - e.pageY) / 25;\n            \n            if (splashContainer) {\n                splashContainer.style.transform = `translate(${xAxis}px, ${yAxis}px)`;\n            }\n            \n            if (splashLogo) {\n                const logoXAxis = (window.innerWidth / 2 - e.pageX) / 50;\n                const logoYAxis = (window.innerHeight / 2 - e.pageY) / 50;\n                splashLogo.style.transform = `translate(${logoXAxis}px, ${logoYAxis}px) rotate(${logoXAxis * 0.1}deg)`;\n            }\n        });\n\n        // Reset positions when mouse leaves\n        splashScreen.addEventListener('mouseleave', () => {\n            if (splashContainer) {\n                splashContainer.style.transform = 'translate(0px, 0px)';\n            }\n            \n            if (splashLogo) {\n                splashLogo.style.transform = 'translate(0px, 0px) rotate(0deg)';\n            }\n        });\n    }\n\n    // Function to apply theme\n    const applyTheme = (theme) => {\n        document.documentElement.setAttribute('data-theme', theme);\n        if (theme === 'dark') {\n            themeIcon.classList.remove('fa-moon');\n            themeIcon.classList.add('fa-sun');\n        } else {\n            themeIcon.classList.remove('fa-sun');\n            themeIcon.classList.add('fa-moon');\n        }\n    };\n\n    // Check for saved theme or system preference\n    const savedTheme = localStorage.getItem('theme');\n    const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n\n    if (savedTheme) {\n        applyTheme(savedTheme);\n    } else if (systemPrefersDark) {\n        applyTheme('dark');\n    }\n\n    // Theme toggle event listener\n    themeToggle.addEventListener('click', () => {\n        const currentTheme = document.documentElement.getAttribute('data-theme') || (systemPrefersDark ? 'dark' : 'light');\n        const newTheme = currentTheme === 'dark' ? 'light' : 'dark';\n        applyTheme(newTheme);\n        localStorage.setItem('theme', newTheme);\n    });\n\n    // Hamburger menu event listener with enhanced animation\n    hamburger.addEventListener('click', () => {\n        // Toggle aria-expanded for accessibility\n        const isExpanded = hamburger.getAttribute('aria-expanded') === 'true';\n        hamburger.setAttribute('aria-expanded', !isExpanded);\n        \n        // Add animation classes\n        navLinks.classList.toggle('active');\n        \n        if (navLinks.classList.contains('active')) {\n            // When opening\n            navLinks.style.display = 'flex';\n            setTimeout(() => {\n                navLinks.style.transform = 'translateY(0)';\n                navLinks.style.opacity = '1';\n            }, 10);\n            addFocusTrap();\n        } else {\n            // When closing\n            navLinks.style.transform = 'translateY(-10px)';\n            navLinks.style.opacity = '0';\n            setTimeout(() => {\n                if (!navLinks.classList.contains('active')) {\n                    navLinks.style.display = 'none';\n                }\n            }, 300);\n            removeFocusTrap();\n        }\n    });\n\n    let focusableElements = [];\n    const focusTrapHandler = (e) => {\n        if (e.key === 'Tab') {\n            const firstElement = focusableElements[0];\n            const lastElement = focusableElements[focusableElements.length - 1];\n\n            if (e.shiftKey && document.activeElement === firstElement) {\n                e.preventDefault();\n                lastElement.focus();\n            } else if (!e.shiftKey && document.activeElement === lastElement) {\n                e.preventDefault();\n                firstElement.focus();\n            }\n        }\n    };\n\n    function addFocusTrap() {\n        focusableElements = Array.from(navLinks.querySelectorAll('a[href], button, input, textarea, select, [tabindex]:not([tabindex=\"-1\"])'));\n        if (focusableElements.length > 0) {\n            focusableElements[0].focus();\n            navLinks.addEventListener('keydown', focusTrapHandler);\n        }\n    }\n\n    function removeFocusTrap() {\n        navLinks.removeEventListener('keydown', focusTrapHandler);\n    }\n\n    // Close mobile menu when clicking outside\n    document.addEventListener('click', (e) => {\n        if (navLinks.classList.contains('active') && \n            !navLinks.contains(e.target) && \n            !hamburger.contains(e.target)) {\n            navLinks.classList.remove('active');\n            navLinks.style.transform = 'translateY(-10px)';\n            navLinks.style.opacity = '0';\n            setTimeout(() => {\n                if (!navLinks.classList.contains('active')) {\n                    navLinks.style.display = 'none';\n                }\n            }, 300);\n            hamburger.setAttribute('aria-expanded', 'false');\n            removeFocusTrap();\n        }\n    });\n\n    // Handle contact form submission if on contact page\n    const contactForm = document.getElementById('contactForm');\n    if (contactForm) {\n        contactForm.addEventListener('submit', function(e) {\n            e.preventDefault();\n            \n            // Get form values\n            const name = document.getElementById('name').value;\n            const email = document.getElementById('email').value;\n            const subject = document.getElementById('subject').value;\n            const message = document.getElementById('message').value;\n            \n            // Get validation messages from localization\n            const messages = window.formValidationMessages || {\n                fill_required: 'Please fill in all required fields.',\n                email_invalid: 'Please enter a valid email address.',\n                thank_you: 'Thank you for your message! We will get back to you soon.'\n            };\n            \n            // Simple validation\n            if (!name || !email || !message) {\n                alert(messages.fill_required);\n                return;\n            }\n            \n            // Email validation\n            const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n            if (!emailRegex.test(email)) {\n                alert(messages.email_invalid);\n                return;\n            }\n            \n            // In a real implementation, you would send this data to your server\n            // For now, we'll just show a success message\n            alert(messages.thank_you);\n            \n            // Reset form\n            this.reset();\n        });\n    }\n\n    // Add scroll event listener for back to top button\n    window.addEventListener('scroll', () => {\n        const backToTop = document.querySelector('.back-to-top');\n        if (backToTop) {\n            if (window.pageYOffset > 300) {\n                backToTop.classList.add('visible');\n            } else {\n                backToTop.classList.remove('visible');\n            }\n        }\n    });\n\n    // Smooth scrolling for navigation links\n    document.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\n        anchor.addEventListener('click', function (e) {\n            e.preventDefault();\n            const target = document.querySelector(this.getAttribute('href'));\n            if (target) {\n                window.scrollTo({\n                    top: target.offsetTop - 70, // Adjust for fixed header\n                    behavior: 'smooth'\n                });\n                // Close mobile menu if open\n                if (navLinks.classList.contains('active')) {\n                    navLinks.classList.remove('active');\n                    navLinks.style.transform = 'translateY(-10px)';\n                    navLinks.style.opacity = '0';\n                    setTimeout(() => {\n                        if (!navLinks.classList.contains('active')) {\n                            navLinks.style.display = 'none';\n                        }\n                    }, 300);\n                    hamburger.setAttribute('aria-expanded', 'false');\n                    removeFocusTrap();\n                }\n            }\n        });\n    });\n\n    // Contact form validation\n    if (contactForm) {\n        contactForm.addEventListener('submit', function(e) {\n            e.preventDefault();\n            \n            const name = document.getElementById('name');\n            const email = document.getElementById('email');\n            const message = document.getElementById('message');\n            let isValid = true;\n\n            // Reset errors\n            [name, email, message].forEach(input => {\n                input.classList.remove('error');\n                const errorMsg = input.nextElementSibling;\n                if (errorMsg && errorMsg.classList.contains('error-message')) {\n                    errorMsg.remove();\n                }\n            });\n\n            // Get validation messages from localization\n            const messages = window.formValidationMessages || {\n                name_required: 'Name is required.',\n                email_required: 'Email is required.',\n                email_invalid: 'Please enter a valid email address.',\n                message_required: 'Message is required.'\n            };\n\n            // Validate name\n            if (name.value.trim() === '') {\n                isValid = false;\n                showError(name, messages.name_required);\n            }\n\n            // Validate email\n            if (email.value.trim() === '') {\n                isValid = false;\n                showError(email, messages.email_required);\n            } else if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email.value)) {\n                isValid = false;\n                showError(email, messages.email_invalid);\n            }\n\n            // Validate message\n            if (message.value.trim() === '') {\n                isValid = false;\n                showError(message, messages.message_required);\n            }\n\n            if (isValid) {\n                // Show loading spinner\n                const submitButton = contactForm.querySelector('button[type=\"submit\"]');\n                const originalText = submitButton.innerHTML;\n                submitButton.innerHTML = '<span class=\"loading-spinner\"></span> Sending...';\n                submitButton.disabled = true;\n\n                // Simulate form submission (in a real app, you would send data to a server)\n                setTimeout(() => {\n                    console.log('Form submitted:', { name: name.value, email: email.value, message: message.value });\n                    const thankYouMessage = window.formValidationMessages?.thank_you || 'Thank you for your message! We will get back to you soon.';\n                    alert(thankYouMessage);\n                    contactForm.reset();\n                    submitButton.innerHTML = originalText;\n                    submitButton.disabled = false;\n                }, 1500);\n            }\n        });\n    }\n\n    function showError(input, message) {\n        input.classList.add('error');\n        const error = document.createElement('div');\n        error.className = 'error-message';\n        error.style.color = 'var(--error)';\n        error.style.fontSize = '0.875rem';\n        error.style.marginTop = '0.25rem';\n        error.textContent = message;\n        input.parentNode.insertBefore(error, input.nextSibling);\n    }\n\n    // Lazy load images\n    function lazyLoadImages() {\n        const images = document.querySelectorAll('img[data-src]');\n        const imageObserver = new IntersectionObserver((entries, observer) => {\n            entries.forEach(entry => {\n                if (entry.isIntersecting) {\n                    const img = entry.target;\n                    img.src = img.dataset.src;\n                    img.classList.remove('lazy-load');\n                    img.classList.add('loaded');\n                    observer.unobserve(img);\n                }\n            });\n        });\n\n        images.forEach(img => {\n            imageObserver.observe(img);\n        });\n    }\n\n    // Gallery animation functions\n    function animateGallery() {\n        const gallerySection = document.querySelector('.gallery');\n        if (!gallerySection) return;\n        \n        // Animate gallery section\n        const gallerySectionObserver = new IntersectionObserver((entries) => {\n            entries.forEach(entry => {\n                if (entry.isIntersecting) {\n                    entry.target.style.animation = `slideUpLarge ${getComputedStyle(document.documentElement).getPropertyValue('--animation-duration')} ease-out forwards`;\n                    entry.target.style.opacity = 1;\n                    entry.target.style.transform = 'translateY(0)';\n                    gallerySectionObserver.unobserve(entry.target);\n                }\n            });\n        }, { threshold: 0.1 });\n        \n        gallerySection.style.opacity = 0;\n        gallerySection.style.transform = 'translateY(30px)';\n        gallerySectionObserver.observe(gallerySection);\n        \n        // Animate gallery items\n        const galleryItems = document.querySelectorAll('.gallery-item');\n        const galleryItemObserver = new IntersectionObserver((entries) => {\n            entries.forEach((entry, index) => {\n                if (entry.isIntersecting) {\n                    setTimeout(() => {\n                        entry.target.style.animation = `slideUp ${getComputedStyle(document.documentElement).getPropertyValue('--animation-duration')} ease-out forwards`;\n                        entry.target.style.opacity = 1;\n                        entry.target.style.transform = 'translateY(0)';\n                        entry.target.classList.add('fade-in');\n                    }, index * 100);\n                    galleryItemObserver.unobserve(entry.target);\n                }\n            });\n        }, { threshold: 0.1 });\n        \n        galleryItems.forEach(item => {\n            item.style.opacity = 0;\n            item.style.transform = 'translateY(20px)';\n            galleryItemObserver.observe(item);\n        });\n    }\n\n    // Animation functions\n    function animateOnScroll() {\n        // Animate feature cards on scroll\n        const featureCards = document.querySelectorAll('.feature-card');\n        const featureCardObserver = new IntersectionObserver((entries) => {\n            entries.forEach((entry, index) => {\n                if (entry.isIntersecting) {\n                    setTimeout(() => {\n                        entry.target.style.animation = `slideUp ${getComputedStyle(document.documentElement).getPropertyValue('--animation-duration')} ease-out forwards`;\n                        entry.target.style.opacity = 1;\n                        entry.target.style.transform = 'translateY(0)';\n                    }, index * 50); // Reduced delay for smoother animation with more cards\n                    featureCardObserver.unobserve(entry.target);\n                }\n            });\n        }, { threshold: 0.1 });\n\n        featureCards.forEach(card => {\n            card.style.opacity = 0;\n            card.style.transform = 'translateY(20px)';\n            featureCardObserver.observe(card);\n        });\n\n        // Animate download buttons\n        const downloadButtons = document.querySelectorAll('.btn-download');\n        const downloadButtonObserver = new IntersectionObserver((entries) => {\n            entries.forEach((entry, index) => {\n                if (entry.isIntersecting) {\n                    // Set CSS variable for animation delay\n                    entry.target.style.setProperty('--delay', index);\n                    setTimeout(() => {\n                        entry.target.style.animation = `slideUp ${getComputedStyle(document.documentElement).getPropertyValue('--animation-duration')} ease-out forwards`;\n                        entry.target.style.opacity = 1;\n                        entry.target.style.transform = 'translateY(0)';\n                    }, index * 100);\n                    downloadButtonObserver.unobserve(entry.target);\n                }\n            });\n        }, { threshold: 0.1 });\n\n        downloadButtons.forEach((button, index) => {\n            button.style.opacity = 0;\n            button.style.transform = 'translateY(20px)';\n            downloadButtonObserver.observe(button);\n        });\n\n        // Animate FAQ items\n        const faqItems = document.querySelectorAll('.faq-accordion details');\n        const faqItemObserver = new IntersectionObserver((entries) => {\n            entries.forEach((entry, index) => {\n                if (entry.isIntersecting) {\n                    setTimeout(() => {\n                        entry.target.style.animation = `slideUp ${getComputedStyle(document.documentElement).getPropertyValue('--animation-duration')} ease-out forwards`;\n                        entry.target.style.opacity = 1;\n                        entry.target.style.transform = 'translateY(0)';\n                    }, index * 100);\n                    faqItemObserver.unobserve(entry.target);\n                }\n            });\n        }, { threshold: 0.1 });\n\n        faqItems.forEach(item => {\n            item.style.opacity = 0;\n            item.style.transform = 'translateY(20px)';\n            faqItemObserver.observe(item);\n        });\n\n        // Animate sections\n        const sections = document.querySelectorAll('.features, .cta-section, .download, .faq, .about, .contact');\n        const sectionObserver = new IntersectionObserver((entries) => {\n            entries.forEach(entry => {\n                if (entry.isIntersecting) {\n                    entry.target.style.animation = `slideUpLarge ${getComputedStyle(document.documentElement).getPropertyValue('--animation-duration')} ease-out forwards`;\n                    entry.target.style.opacity = 1;\n                    entry.target.style.transform = 'translateY(0)';\n                    sectionObserver.unobserve(entry.target);\n                }\n            });\n        }, { threshold: 0.1 });\n\n        sections.forEach(section => {\n            section.style.opacity = 0;\n            section.style.transform = 'translateY(30px)';\n            sectionObserver.observe(section);\n        });\n        \n        // Animate download section elements\n        const downloadHeading = document.querySelector('.download h2');\n        const downloadParagraph = document.querySelector('.download p');\n        \n        if (downloadHeading) {\n            const headingObserver = new IntersectionObserver((entries) => {\n                entries.forEach(entry => {\n                    if (entry.isIntersecting) {\n                        entry.target.style.animation = `fadeInUp 1s ease-out forwards`;\n                        entry.target.style.opacity = 1;\n                        headingObserver.unobserve(entry.target);\n                    }\n                });\n            }, { threshold: 0.1 });\n            \n            downloadHeading.style.opacity = 0;\n            headingObserver.observe(downloadHeading);\n        }\n        \n        if (downloadParagraph) {\n            const paragraphObserver = new IntersectionObserver((entries) => {\n                entries.forEach(entry => {\n                    if (entry.isIntersecting) {\n                        entry.target.style.animation = `fadeInUp 1s ease-out forwards`;\n                        entry.target.style.opacity = 1;\n                        paragraphObserver.unobserve(entry.target);\n                    }\n                });\n            }, { threshold: 0.1 });\n            \n            downloadParagraph.style.opacity = 0;\n            paragraphObserver.observe(downloadParagraph);\n        }\n        \n        // Animate gallery\n        animateGallery();\n        \n        // Animate download section logo\n        const downloadLogo = document.querySelector('.download .logo-container');\n        if (downloadLogo) {\n            const logoObserver = new IntersectionObserver((entries) => {\n                entries.forEach(entry => {\n                    if (entry.isIntersecting) {\n                        entry.target.style.animation = `fadeInUp 1s ease-out forwards`;\n                        entry.target.style.opacity = 1;\n                        logoObserver.unobserve(entry.target);\n                    }\n                });\n            }, { threshold: 0.1 });\n            \n            downloadLogo.style.opacity = 0;\n            logoObserver.observe(downloadLogo);\n        }\n    }\n\n    // Initialize animations\n    animateOnScroll();\n    \n    // Initialize lazy loading\n    lazyLoadImages();\n    \n    // Add floating animation to hero image\n    addFloatingAnimation();\n\n    // Back to top button\n    const backToTopButton = document.querySelector('.back-to-top');\n    if (backToTopButton) {\n        window.addEventListener('scroll', () => {\n            if (window.scrollY > 300) {\n                backToTopButton.classList.add('visible');\n            } else {\n                backToTopButton.classList.remove('visible');\n            }\n        });\n\n        backToTopButton.addEventListener('click', (e) => {\n            e.preventDefault();\n            window.scrollTo({\n                top: 0,\n                behavior: 'smooth'\n            });\n        });\n    }\n\n    // Active nav link highlighting on scroll\n    const sections = document.querySelectorAll('main section[id]');\n    const navLi = document.querySelectorAll('.nav-links li a');\n\n    const sectionObserver = new IntersectionObserver((entries) => {\n        entries.forEach(entry => {\n            if (entry.isIntersecting) {\n                const id = entry.target.getAttribute('id');\n                navLi.forEach(link => {\n                    link.classList.remove('active');\n                    if (link.getAttribute('href') === `#${id}`) {\n                        link.classList.add('active');\n                    }\n                });\n            }\n        });\n    }, { rootMargin: '-50% 0px -50% 0px' });\n\n    sections.forEach(section => {\n        sectionObserver.observe(section);\n    });\n\n    // Enhanced keyboard navigation for accordion\n    const accordionItems = document.querySelectorAll('.faq-accordion summary');\n    accordionItems.forEach(item => {\n        item.addEventListener('keydown', (e) => {\n            if (e.key === 'Enter' || e.key === ' ') {\n                e.preventDefault();\n                item.parentElement.open = !item.parentElement.open;\n            }\n        });\n    });\n    \n    // Lightbox functionality\n    function initLightbox() {\n        // Get all gallery images\n        galleryImages = document.querySelectorAll('.gallery-item img');\n        \n        // Add click event to each gallery image\n        galleryImages.forEach((img, index) => {\n            img.addEventListener('click', function(e) {\n                e.preventDefault();\n                openLightbox(index);\n            });\n        });\n        \n        // Close lightbox when clicking on close button\n        lightboxClose.addEventListener('click', closeLightbox);\n        \n        // Close lightbox when clicking outside the image\n        lightbox.addEventListener('click', function(e) {\n            if (e.target === lightbox) {\n                closeLightbox();\n            }\n        });\n        \n        // Navigate with arrow keys\n        document.addEventListener('keydown', function(e) {\n            if (lightbox.style.display === 'block') {\n                if (e.key === 'Escape') {\n                    closeLightbox();\n                } else if (e.key === 'ArrowLeft') {\n                    showPrevImage();\n                } else if (e.key === 'ArrowRight') {\n                    showNextImage();\n                }\n            }\n        });\n        \n        // Navigate with prev/next buttons\n        lightboxPrev.addEventListener('click', showPrevImage);\n        lightboxNext.addEventListener('click', showNextImage);\n    }\n    \n    function openLightbox(index) {\n        currentImageIndex = index;\n        const img = galleryImages[index];\n        lightboxImg.src = img.src;\n        lightboxCaption.textContent = img.alt;\n        lightbox.style.display = 'block';\n        document.body.style.overflow = 'hidden'; // Prevent scrolling when lightbox is open\n        \n        // Update navigation button visibility\n        updateNavigationButtons();\n    }\n    \n    function closeLightbox() {\n        lightbox.style.display = 'none';\n        document.body.style.overflow = 'auto'; // Re-enable scrolling\n    }\n    \n    function showPrevImage() {\n        currentImageIndex = (currentImageIndex - 1 + galleryImages.length) % galleryImages.length;\n        updateLightbox();\n    }\n    \n    function showNextImage() {\n        currentImageIndex = (currentImageIndex + 1) % galleryImages.length;\n        updateLightbox();\n    }\n    \n    function updateLightbox() {\n        const img = galleryImages[currentImageIndex];\n        lightboxImg.src = img.src;\n        lightboxCaption.textContent = img.alt;\n        updateNavigationButtons();\n    }\n    \n    function updateNavigationButtons() {\n        // Hide prev button if at first image\n        lightboxPrev.style.display = currentImageIndex === 0 ? 'none' : 'flex';\n        // Hide next button if at last image\n        lightboxNext.style.display = currentImageIndex === galleryImages.length - 1 ? 'none' : 'flex';\n    }\n    \n    // Initialize lightbox\n    initLightbox();\n    \n    // Listen for language changes\n    document.addEventListener('languageChanged', function(event) {\n        const { language, isRTL } = event.detail;\n        \n        // Update animations for RTL\n        if (isRTL) {\n            // Add RTL-specific animation classes\n            document.body.classList.add('rtl-animations');\n        } else {\n            document.body.classList.remove('rtl-animations');\n        }\n        \n        // Update any other RTL-specific functionality\n        updateRTLFeatures(isRTL);\n    });\n    \n    function updateRTLFeatures(isRTL) {\n        // Update any elements that need special RTL handling\n        const heroImage = document.querySelector('.hero-image-container');\n        if (heroImage && isRTL) {\n            // Adjust hero image positioning for RTL\n            heroImage.style.transform = 'perspective(1000px) rotateY(5deg) rotateX(5deg)';\n        } else if (heroImage && !isRTL) {\n            // Reset to LTR positioning\n            heroImage.style.transform = 'perspective(1000px) rotateY(-5deg) rotateX(5deg)';\n        }\n    }\n});","size_bytes":32137},"replit.md":{"content":"# Polban Landing Page\n\n## Overview\nThis is a static multilingual landing page for Polban, a financial management application. The website showcases the app's features with full support for English and Persian (Farsi) languages, including proper RTL layout support.\n\n## Project Structure\n- **Type**: Static website (HTML, CSS, JavaScript)\n- **Languages Supported**: English (en) and Persian (fa) with RTL support\n- **Assets**: Optimized images in WebP format with fallbacks\n- **Features**: Theme toggle, typing animation, responsive design, accessibility\n\n## Setup Details\n- **Server**: HTTP server running on port 5000\n- **Host Configuration**: Configured to bind to 0.0.0.0 for Replit environment\n- **Dependencies**: Node.js with sharp for image processing and http-server for serving\n- **Workflow**: Static Website Server running npx http-server with CORS enabled\n- **Deployment**: Configured for autoscale deployment target\n\n## Architecture\n```\n├── assets/images/          # Optimized images and icons\n├── pages/                  # Secondary HTML pages\n├── src/\n│   ├── css/               # Stylesheets (including RTL support)\n│   ├── js/                # JavaScript (localization, animations)\n│   └── locales/           # Translation files (en.json, fa.json)\n├── index.html             # Main landing page\n├── package.json           # Node.js dependencies\n└── utility scripts        # Image conversion and minification\n```\n\n## Key Features Implemented\n- ✅ Multilingual support with dynamic language switching\n- ✅ RTL layout support for Persian/Arabic\n- ✅ Responsive design with theme toggle (light/dark)\n- ✅ Typing animation with localized phrases\n- ✅ Lazy loading gallery with WebP image optimization\n- ✅ Accessibility features and proper semantic HTML\n- ✅ SEO optimization with structured data\n\n## Deployment Configuration\n- **Target**: Autoscale (suitable for static websites)\n- **Command**: `npx http-server . -p 5000 -a 0.0.0.0 --cors -c-1`\n- **Port**: 5000 (frontend)\n- **Cache Control**: Disabled (-c-1) for development\n\n## Recent Changes\n- 2025-09-21: Initial Replit environment setup completed\n- 2025-09-21: HTTP server configured with proper host settings\n- 2025-09-21: Workflow and deployment configuration completed\n- 2025-09-21: All functionality tested and verified working\n\n## User Preferences\n- Prefers clean, production-ready code\n- Focus on accessibility and multilingual support\n- Optimized performance with WebP images and proper caching","size_bytes":2535}},"version":1}